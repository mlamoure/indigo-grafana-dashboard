{"version":3,"sources":["webpack:///./public/app/features/admin/ServerStats.tsx"],"names":["ServerStats","_super","_this","apply","this","arguments","state","stats","isLoading","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","componentDidMount","props","getServerStats","_a","sent","setState","console","error","error_1","render","navModel","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_6__","Contents","className","map","StatItem","react__WEBPACK_IMPORTED_MODULE_1__","stat","key","name","value","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","react_redux__WEBPACK_IMPORTED_MODULE_3__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_4__","navIndex","_state_apis__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"0PAmBAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,MAAe,CACbC,MAAO,GACPC,WAAW,KAgCf,OAnCiCC,OAAAC,EAAA,UAAAD,CAAAT,EAAAC,GAMzBD,EAAAW,UAAAC,kBAAN,iJAEkB,gCAAMR,KAAKS,MAAMC,gCAAzBP,EAAQQ,EAAAC,OACdZ,KAAKa,SAAS,CAAEV,MAAKA,EAAEC,WAAW,mCAElCU,QAAQC,MAAMC,gCAIlBpB,EAAAW,UAAAU,OAAA,WACU,IAAAC,EAAAlB,KAAAS,MAAAS,SACFP,EAAAX,KAAAE,MAAEC,EAAAQ,EAAAR,MAAOC,EAAAO,EAAAP,UAEf,OACEe,EAAAC,EAAAC,cAACC,EAAA,EAAI,CAACJ,SAAUA,GACdC,EAAAC,EAAAC,cAACC,EAAA,EAAKC,SAAQ,CAACnB,UAAWA,GACxBe,EAAAC,EAAAC,cAAA,SAAOG,UAAU,4BACfL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aAAQlB,EAAMsB,IAAIC,QAM9B9B,EAnCA,CAAiC+B,EAAA,eAqCjC,SAASD,EAASE,GAChB,OACET,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,EAAKE,MACZX,EAAAC,EAAAC,cAAA,UAAKO,EAAKE,MACVX,EAAAC,EAAAC,cAAA,UAAKO,EAAKG,QAUDC,EAAA,QAAA3B,OAAA4B,EAAA,IAAA5B,CAAI6B,EAAJ,CAAY7B,OAAA8B,EAAA,QAAA9B,CALH,SAACH,GAAsB,OAC7CgB,SAAUb,OAAA+B,EAAA,EAAA/B,CAAYH,EAAMmC,SAAU,gBACtC3B,eAAgB4B,EAAA,IAGSjC,CAAyBT","file":"ServerStats.5d0a2c90becb1849160c.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { StoreState } from 'app/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getServerStats, ServerStat } from './state/apis';\nimport Page from 'app/core/components/Page/Page';\nimport { NavModel } from '@grafana/data';\n\ninterface Props {\n  navModel: NavModel;\n  getServerStats: () => Promise<ServerStat[]>;\n}\n\ninterface State {\n  stats: ServerStat[];\n  isLoading: boolean;\n}\n\nexport class ServerStats extends PureComponent<Props, State> {\n  state: State = {\n    stats: [],\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const stats = await this.props.getServerStats();\n      this.setState({ stats, isLoading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const { navModel } = this.props;\n    const { stats, isLoading } = this.state;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          <table className=\"filter-table form-inline\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>{stats.map(StatItem)}</tbody>\n          </table>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction StatItem(stat: ServerStat) {\n  return (\n    <tr key={stat.name}>\n      <td>{stat.name}</td>\n      <td>{stat.value}</td>\n    </tr>\n  );\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'server-stats'),\n  getServerStats: getServerStats,\n});\n\nexport default hot(module)(connect(mapStateToProps)(ServerStats));\n"],"sourceRoot":""}