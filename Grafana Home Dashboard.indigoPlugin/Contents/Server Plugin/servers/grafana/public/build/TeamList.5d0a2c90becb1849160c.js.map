{"version":3,"sources":["webpack:///./public/app/features/teams/TeamList.tsx","webpack:///./public/app/features/teams/state/selectors.ts","webpack:///./public/app/core/components/connectWithCleanUp.tsx"],"names":["TeamList","_super","_this","apply","this","arguments","deleteTeam","team","props","id","onSearchQueryChange","value","setSearchQuery","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","componentDidMount","fetchTeams","loadTeams","_a","sent","renderTeam","editorsCanAdmin","signedInUser","permission","teamUrl","canDelete","_state_selectors__WEBPACK_IMPORTED_MODULE_8__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","className","href","src","avatarUrl","name","email","memberCount","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","onConfirm","disabled","renderEmptyList","app_core_components_EmptyListCTA_EmptyListCTA__WEBPACK_IMPORTED_MODULE_5__","title","buttonIcon","buttonLink","buttonTitle","proTip","proTipLink","proTipLinkTitle","proTipTarget","renderTeamList","teams","searchQuery","isCanAdminAndViewer","orgRole","app_types__WEBPACK_IMPORTED_MODULE_6__","Viewer","disabledClass","newTeamHref","Fragment","app_core_components_FilterInput_FilterInput__WEBPACK_IMPORTED_MODULE_10__","labelClassName","inputClassName","placeholder","onChange","style","width","map","renderList","teamsCount","render","hasFetched","navModel","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_3__","Contents","isLoading","react__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_state_actions__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","module","_core_components_connectWithCleanUp__WEBPACK_IMPORTED_MODULE_13__","state","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_9__","navIndex","app_core_config__WEBPACK_IMPORTED_MODULE_11__","app_core_services_context_srv__WEBPACK_IMPORTED_MODULE_12__","user","__webpack_require__","d","getSearchQuery","getSearchMemberQuery","getTeamGroups","getTeamsCount","getTeam","getTeams","getTeamMembers","isSignedInUserTeamAdmin","isPermissionTeamAdmin","app_types__WEBPACK_IMPORTED_MODULE_0__","searchMemberQuery","groups","length","currentTeamId","parseInt","regex","RegExp","filter","test","members","member","login","config","userInMembers","find","m","userId","Member","isAdmin","isGrafanaAdmin","Admin","userIsTeamAdmin","connectWithCleanUp","mapStateToProps","stateSelector","Component","ConnectedComponent","react_redux__WEBPACK_IMPORTED_MODULE_1__","ConnectedComponentWithCleanUp","dispatch","react__WEBPACK_IMPORTED_MODULE_3__","_actions_cleanUp__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3___default","displayName","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_4___default"],"mappings":"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","file":"TeamList.5d0a2c90becb1849160c.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Page from 'app/core/components/Page/Page';\nimport { DeleteButton } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { Team, OrgRole, StoreState } from 'app/types';\nimport { loadTeams, deleteTeam, setSearchQuery } from './state/actions';\nimport { getSearchQuery, getTeams, getTeamsCount, isPermissionTeamAdmin } from './state/selectors';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { config } from 'app/core/config';\nimport { contextSrv, User } from 'app/core/services/context_srv';\nimport { connectWithCleanUp } from '../../core/components/connectWithCleanUp';\n\nexport interface Props {\n  navModel: NavModel;\n  teams: Team[];\n  searchQuery: string;\n  teamsCount: number;\n  hasFetched: boolean;\n  loadTeams: typeof loadTeams;\n  deleteTeam: typeof deleteTeam;\n  setSearchQuery: typeof setSearchQuery;\n  editorsCanAdmin?: boolean;\n  signedInUser?: User;\n}\n\nexport class TeamList extends PureComponent<Props, any> {\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  async fetchTeams() {\n    await this.props.loadTeams();\n  }\n\n  deleteTeam = (team: Team) => {\n    this.props.deleteTeam(team.id);\n  };\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchQuery(value);\n  };\n\n  renderTeam(team: Team) {\n    const { editorsCanAdmin, signedInUser } = this.props;\n    const permission = team.permission;\n    const teamUrl = `org/teams/edit/${team.id}`;\n    const canDelete = isPermissionTeamAdmin({ permission, editorsCanAdmin, signedInUser });\n\n    return (\n      <tr key={team.id}>\n        <td className=\"width-4 text-center link-td\">\n          <a href={teamUrl}>\n            <img className=\"filter-table__avatar\" src={team.avatarUrl} />\n          </a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.name}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.email}</a>\n        </td>\n        <td className=\"link-td\">\n          <a href={teamUrl}>{team.memberCount}</a>\n        </td>\n        <td className=\"text-right\">\n          <DeleteButton onConfirm={() => this.deleteTeam(team)} disabled={!canDelete} />\n        </td>\n      </tr>\n    );\n  }\n\n  renderEmptyList() {\n    return (\n      <EmptyListCTA\n        title=\"You haven't created any teams yet.\"\n        buttonIcon=\"gicon gicon-team\"\n        buttonLink=\"org/teams/new\"\n        buttonTitle=\" New team\"\n        proTip=\"Assign folder and dashboard permissions to teams instead of users to ease administration.\"\n        proTipLink=\"\"\n        proTipLinkTitle=\"\"\n        proTipTarget=\"_blank\"\n      />\n    );\n  }\n\n  renderTeamList() {\n    const { teams, searchQuery, editorsCanAdmin, signedInUser } = this.props;\n    const isCanAdminAndViewer = editorsCanAdmin && signedInUser.orgRole === OrgRole.Viewer;\n    const disabledClass = isCanAdminAndViewer ? ' disabled' : '';\n    const newTeamHref = isCanAdminAndViewer ? '#' : 'org/teams/new';\n\n    return (\n      <>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput\n              labelClassName=\"gf-form--has-input-icon gf-form--grow\"\n              inputClassName=\"gf-form-input\"\n              placeholder=\"Search teams\"\n              value={searchQuery}\n              onChange={this.onSearchQueryChange}\n            />\n          </div>\n\n          <div className=\"page-action-bar__spacer\" />\n\n          <a className={`btn btn-primary${disabledClass}`} href={newTeamHref}>\n            New team\n          </a>\n        </div>\n\n        <div className=\"admin-list-table\">\n          <table className=\"filter-table filter-table--hover form-inline\">\n            <thead>\n              <tr>\n                <th />\n                <th>Name</th>\n                <th>Email</th>\n                <th>Members</th>\n                <th style={{ width: '1%' }} />\n              </tr>\n            </thead>\n            <tbody>{teams.map(team => this.renderTeam(team))}</tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n\n  renderList() {\n    const { teamsCount } = this.props;\n\n    if (teamsCount > 0) {\n      return this.renderTeamList();\n    } else {\n      return this.renderEmptyList();\n    }\n  }\n\n  render() {\n    const { hasFetched, navModel } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={!hasFetched}>{hasFetched && this.renderList()}</Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n    teams: getTeams(state.teams),\n    searchQuery: getSearchQuery(state.teams),\n    teamsCount: getTeamsCount(state.teams),\n    hasFetched: state.teams.hasFetched,\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadTeams,\n  deleteTeam,\n  setSearchQuery,\n};\n\nexport default hot(module)(connectWithCleanUp(mapStateToProps, mapDispatchToProps, state => state.teams)(TeamList));\n","import { Team, TeamsState, TeamState, TeamMember, OrgRole, TeamPermissionLevel } from 'app/types';\nimport { User } from 'app/core/services/context_srv';\n\nexport const getSearchQuery = (state: TeamsState) => state.searchQuery;\nexport const getSearchMemberQuery = (state: TeamState) => state.searchMemberQuery;\nexport const getTeamGroups = (state: TeamState) => state.groups;\nexport const getTeamsCount = (state: TeamsState) => state.teams.length;\n\nexport const getTeam = (state: TeamState, currentTeamId: any): Team | null => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\n\nexport const getTeams = (state: TeamsState) => {\n  const regex = RegExp(state.searchQuery, 'i');\n\n  return state.teams.filter(team => {\n    return regex.test(team.name);\n  });\n};\n\nexport const getTeamMembers = (state: TeamState) => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n\n  return state.members.filter(member => {\n    return regex.test(member.login) || regex.test(member.email);\n  });\n};\n\nexport interface Config {\n  members: TeamMember[];\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isSignedInUserTeamAdmin = (config: Config): boolean => {\n  const { members, signedInUser, editorsCanAdmin } = config;\n  const userInMembers = members.find(m => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n\n  return isPermissionTeamAdmin({ permission, signedInUser, editorsCanAdmin });\n};\n\nexport interface PermissionConfig {\n  permission: TeamPermissionLevel;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isPermissionTeamAdmin = (config: PermissionConfig): boolean => {\n  const { permission, signedInUser, editorsCanAdmin } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};\n","import { connect, MapDispatchToPropsParam, MapStateToPropsParam, useDispatch } from 'react-redux';\nimport { cleanUpAction, StateSelector } from '../actions/cleanUp';\nimport React, { ComponentType, FunctionComponent, useEffect } from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nexport const connectWithCleanUp = <\n  TStateProps extends {} = {},\n  TDispatchProps = {},\n  TOwnProps = {},\n  State = {},\n  TSelector extends object = {},\n  Statics = {}\n>(\n  mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n  mapDispatchToProps: MapDispatchToPropsParam<TDispatchProps, TOwnProps>,\n  stateSelector: StateSelector<TSelector>\n) => (Component: ComponentType<any>) => {\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n    // @ts-ignore\n  )(Component);\n\n  const ConnectedComponentWithCleanUp: FunctionComponent = props => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      return function cleanUp() {\n        dispatch(cleanUpAction({ stateSelector }));\n      };\n    }, []);\n    // @ts-ignore\n    return <ConnectedComponent {...props} />;\n  };\n\n  ConnectedComponentWithCleanUp.displayName = `ConnectWithCleanUp(${ConnectedComponent.displayName})`;\n  hoistNonReactStatics(ConnectedComponentWithCleanUp, Component);\n  type Hoisted = typeof ConnectedComponentWithCleanUp & Statics;\n\n  return ConnectedComponentWithCleanUp as Hoisted;\n};\n"],"sourceRoot":""}