{"version":3,"sources":["webpack:///1.dbd4626b9332282e4156.js","webpack:///./public/app/containers/Explore/Wrapper.tsx","webpack:///./public/vendor/flot/jquery.flot.js","webpack:///./public/vendor/flot/jquery.flot.time.js","webpack:///./public/app/containers/Explore/Explore.tsx","webpack:///./public/app/containers/Explore/ElapsedTime.tsx","webpack:///./public/app/containers/Explore/QueryRows.tsx","webpack:///./public/app/containers/Explore/QueryField.tsx","webpack:///./public/app/containers/Explore/utils/dom.ts","webpack:///./public/app/containers/Explore/slate-plugins/braces.ts","webpack:///./public/app/containers/Explore/slate-plugins/clear.ts","webpack:///./public/app/containers/Explore/slate-plugins/newline.ts","webpack:///./public/app/containers/Explore/slate-plugins/prism/index.tsx","webpack:///./public/app/containers/Explore/slate-plugins/prism/promql.ts","webpack:///./public/app/containers/Explore/slate-plugins/runner.ts","webpack:///./public/app/containers/Explore/utils/debounce.ts","webpack:///./public/app/containers/Explore/utils/prometheus.ts","webpack:///./public/app/containers/Explore/Typeahead.tsx","webpack:///./public/app/containers/Explore/Graph.tsx","webpack:///./public/app/containers/Explore/Legend.tsx","webpack:///./public/app/containers/Explore/Table.tsx","webpack:///./public/app/containers/Explore/TimePicker.tsx","webpack:///./public/app/containers/Explore/utils/query.ts"],"names":["webpackJsonp","1661","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__Explore__","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","arguments","length","call","Wrapper","_super","_this","apply","state","initialState","split","handleChangeSplit","setState","render","_a","a","createElement","className","props","position","onChangeSplit","1665","exports","$","color","make","r","g","o","add","c","charAt","normalize","scale","f","toString","join","clamp","min","max","parseInt","clone","extract","elem","css","toLowerCase","parent","nodeName","get","parse","str","res","m","exec","parseFloat","name","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","jQuery","Canvas","cls","container","element","children","document","direction","left","top","appendTo","getContext","window","G_vmlCanvasManager","Error","initElement","context","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","resize","width","height","textContainer","text","_textCache","_textSizeCache","flotTextSizeCache","Plot","placeholder","data_","options_","plugins","executeHooks","hook","args","plot","concat","setData","series","parseData","fillInSeriesOptions","processData","extend","options","data","push","axisNumber","obj","coord","allAxes","grep","xaxes","yaxes","canvasToAxisCoords","pos","axis","used","c2p","undefined","x1","x","y1","y","axisToCanvasCoords","key","p2c","getOrCreateAxis","axes","number","xaxis","yaxis","neededColors","maxIndex","sc","colors","colorPool","colorPoolSize","variation","colori","lines","show","v","zero","fill","updateAxis","datamin","fakeInfinity","datamax","j","k","points","ps","val","format","topSentry","Number","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","MAX_VALUE","each","_","datapoints","hooks","processRawData","required","bars","autoscale","defaultValue","horizontal","pointsize","insertSteps","steps","nullify","isNaN","Infinity","transform","processDatapoints","xmin","ymin","xmax","ymax","delta","align","barWidth","shutdown","redrawTimeout","clearTimeout","eventHolder","unbind","onMouseMove","onMouseLeave","onClick","setTransformationHelpers","identity","it","inverseTransform","plotWidth","Math","abs","plotHeight","measureTickLabels","opts","ticks","labelWidth","labelHeight","maxWidth","floor","surface","legacyStyles","layer","font","label","info","getTextInfo","allocateAxisBoxFirstPhase","lw","lh","isXAxis","tickLength","axisMargin","grid","padding","labelMargin","eventSectionPadding","eventSectionHeight","innermost","outermost","first","found","reserveSpace","plotOffset","bottom","box","right","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","minMargin","minBorderMargin","radius","lineWidth","margins","ceil","setupGrid","showGrid","margin","processOffset","borderWidth","axisOpts","setRange","processRange","allocatedAxes","snaped","setupTickGeneration","setTicks","snapRangeToTicks","drawAxisLabels","insertLegend","widen","autoscaleMargin","noTicks","sqrt","dec","log","LN10","maxDec","tickDecimals","size","magn","pow","norm","minTickSize","tickSize","scaledDecimals","mode","tickGenerator","prev","start","floorInBase","NaN","tickFormatter","factor","formatted","round","decimal","indexOf","precision","substr","isFunction","alignTicksWithAxis","otherAxis","niceTicks","extraDec","ts","test","toFixed","oticks","changed","draw","clear","drawBackground","ctx","backgroundColor","aboveData","drawGrid","drawSeries","triggerRedrawOverlay","extractRange","ranges","from","to","tmp","save","translate","fillStyle","getColorOrGradient","fillRect","restore","bw","bc","markings","getAxes","xrange","yrange","xequal","yequal","markingsLineWidth","subPixel","beginPath","strokeStyle","markingsColor","moveTo","lineTo","stroke","xoff","yoff","tickColor","borderColor","strokeRect","tick","halign","valign","removeText","addText","drawSeriesLines","drawSeriesBars","drawSeriesPoints","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","lineJoin","sw","shadowSize","angle","PI","sin","cos","getFillStyle","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","plotPoints","offset","shadow","symbol","arc","closePath","w","drawBar","barLeft","barRight","fillStyleCallback","drawLeft","drawRight","drawTop","drawBottom","filloptions","seriesColor","fillColor","legend","html","find","remove","fragments","entries","rowStarted","lf","labelFormatter","sorted","sort","reverse","ascending","entry","noColumns","labelBoxBorderColor","table","replace","backgroundOpacity","div","prependTo","findNearbyItem","mouseX","mouseY","seriesFilter","maxDistance","mouseActiveRadius","smallestDistance","item","mx","my","maxx","maxy","dx","dy","dist","datapoint","slice","dataIndex","seriesIndex","e","hoverable","triggerClickHoverEvent","isSelecting","eventname","event","canvasX","pageX","canvasY","pageY","ctrlKey","metaKey","autoHighlight","highlights","h","auto","point","unhighlight","highlight","trigger","interaction","redrawOverlayInterval","drawOverlay","setTimeout","octx","overlay","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","splice","highlightColor","pointRadius","spec","defaultColor","gradient","createLinearGradient","l","co","brightness","opacity","addColorStop","clickable","processOptions","bindEvents","getPlaceholder","getCanvas","getPlotOffset","getData","getXAxes","getYAxes","getOptions","pointOffset","destroy","removeData","empty","classes","init","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","style","variant","weight","family","lineHeight","x2axis","y2axis","coloredAreas","coloredAreasColor","existing","mousemove","bind","click","base","fn","detach","parentNode","removeChild","clearRect","cache","layerKey","getTextLayer","layerCache","hide","styleKey","styleCache","positions","active","rendered","append","font-size","insertAfter","addClass","textStyle","max-width","outerWidth","outerHeight","text-align","version","1668","formatDate","fmt","monthNames","dayNames","strftime","leftPad","pad","escape","hours","getHours","isAM","hours12","getDay","getMonth","getDate","getMinutes","getSeconds","getFullYear","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","utc","date","dateGenerator","timezone","Date","timezoneJS","setTimezone","setTime","axisName","minSize","specQuarters","specMonths","timeUnitSize","unit","year","step","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","minute","hour","day","setDate","month","quarter","carry","getTime","end","timeformat","useQuarters","span","suffix","hourCode","twelveHourClock","second","baseSpec","1700","makeTimeSeriesList","dataList","map","seriesData","index","alias","target","colorIndex","__WEBPACK_IMPORTED_MODULE_2_app_core_utils_colors__","__WEBPACK_IMPORTED_MODULE_3_app_core_time_series2__","parseInitialState","initial","parsed","JSON","__WEBPACK_IMPORTED_MODULE_10_app_core_utils_location_util__","queries","q","query","range","console","error","__WEBPACK_IMPORTED_MODULE_8__TimePicker__","__WEBPACK_IMPORTED_MODULE_1_react_hot_loader__","__WEBPACK_IMPORTED_MODULE_4__ElapsedTime__","__WEBPACK_IMPORTED_MODULE_5__QueryRows__","__WEBPACK_IMPORTED_MODULE_6__Graph__","__WEBPACK_IMPORTED_MODULE_7__Table__","__WEBPACK_IMPORTED_MODULE_9__utils_query__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","next","rejected","result","done","then","__generator","body","verb","op","TypeError","ops","pop","trys","sent","throw","return","Symbol","iterator","Explore","handleAddQueryRow","nextQueries","handleChangeQuery","nextQuery","handleChangeTime","nextRange","handleSubmit","handleClickCloseSplit","handleClickGraphButton","showingGraph","handleClickSplit","handleClickTableButton","showingTable","handleRemoveQueryRow","runTableQuery","runGraphQuery","request","url","datasource","metadataRequest","routeParams","datasourceError","datasourceLoading","graphResult","latency","loading","queryError","requestOptions","tableResult","componentDidMount","testResult","datasourceSrv","testDatasource","status","message","componentDidCatch","now","response_1","_b","interval","instant","tableModel","response_2","showingBoth","graphHeight","graphButtonActive","tableButtonActive","exploreClass","onChangeTime","time","title","onAddQueryRow","onChangeQuery","onExecuteQuery","onRemoveQueryRow","id","Component","1701","ElapsedTime","elapsed","jetzt","timer","setInterval","componentWillReceiveProps","nextProps","clearInterval","componentWillUnmount","1702","__WEBPACK_IMPORTED_MODULE_1__QueryField__","__rest","getOwnPropertySymbols","QueryRow","edited","handleClickAddButton","handleClickRemoveButton","handlePressEnter","initialQuery","onPressEnter","onQueryChange","QueryRows","handlers","1703","flattenSuggestions","reduce","acc","items","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2_slate__","__WEBPACK_IMPORTED_MODULE_3_slate_react__","__WEBPACK_IMPORTED_MODULE_4_slate_plain_serializer__","__WEBPACK_IMPORTED_MODULE_5__utils_dom__","__WEBPACK_IMPORTED_MODULE_6__slate_plugins_braces__","__WEBPACK_IMPORTED_MODULE_7__slate_plugins_clear__","__WEBPACK_IMPORTED_MODULE_8__slate_plugins_newline__","__WEBPACK_IMPORTED_MODULE_9__slate_plugins_prism_index__","__WEBPACK_IMPORTED_MODULE_10__slate_plugins_runner__","__WEBPACK_IMPORTED_MODULE_11__utils_debounce__","__WEBPACK_IMPORTED_MODULE_12__utils_prometheus__","__WEBPACK_IMPORTED_MODULE_13__Typeahead__","EMPTY_METRIC","TYPEAHEAD_DEBOUNCE","getInitialValue","fromJSON","nodes","object","type","leaves","Portal","node","classList","appendChild","createPortal","QueryField","onChange","requestAnimationFrame","handleTypeahead","onMetricsReceived","metrics","change","insertText","deleteBackward","fetch","serialize","selection","getSelection","anchorNode","wrapperNode","parentElement","editorNode","closest","isBlurred","getRangeAt","textContent","startOffset","prefix_1","suggestionGroups","wrapperClasses","typeaheadContext","metricNode","querySelector","contains","metric","labelKeys","startsWith","labelKeyNode","labelKey","labelValues","fetchMetricLabels","defaultKeys","keys","filter","fetchLabelValues","match","results_1","filteredSuggestions","group","typeaheadPrefix","typeaheadText","suggestions","onKeyDown","menuEl","typeaheadIndex","preventDefault","resetTypeahead","flattenedSuggestions","selected","selectedIndex","suggestion","applyTypeahead","handleBlur","onBlur","resetTimer","handleFocus","onFocus","handleClickMenu","updateMenu","menu","removeAttribute","rect","getBoundingClientRect","scrollY","scrollX","menuRef","el","renderMenu","selectedKeys","selectedItems","onClickItem","groupedItems","handler","fetchMetricNames","componentDidUpdate","nextChar","backward","suffixLength","midWord","forward","deleteForward","focus","pairs","values","e_1","_c","json","onRequestError","e_2","_d","error_1","autoCorrect","spellCheck","1704","getPreviousCousin","selector","sibling","previousSibling","getNextCharacter","global","Element","matches","ownerDocument","querySelectorAll","1705","BracesPlugin","isCollapsed","BRACES","move","anchorText","anchorOffset","space","length_1","[","{","(","1706","ClearPlugin","1707","getIndent","trimLeft","indent","NewlinePlugin","shiftKey","startBlock","currentLineText","splitBlock","1708","configurePrismMetricsTokens","__WEBPACK_IMPORTED_MODULE_1_prismjs___default","languages","promql","pattern","RegExp","PrismPlugin","renderMark","mark","TOKEN_MARK","decorateNode","processToken","token","types","content","startText","endText","endOffset","newlines","available","remaining","texts","shift","anchorKey","focusKey","focusOffset","marks","decorations","_i","subToken","getTexts","toArray","tstring","grammar","tokens","tokenize","tokens_1","__WEBPACK_IMPORTED_MODULE_1_prismjs__","__WEBPACK_IMPORTED_MODULE_2__promql__","1709","OPERATORS","AGGREGATION_OPERATORS","FUNCTIONS","tokenizer","comment","lookbehind","context-aggregation","inside","label-key","context-labels","label-value","greedy","function","context-range","range-duration","operator","punctuation","1710","RunnerPlugin","1711","debounce","func","wait","timeout","later","1712","processLabels","labels","forEach","rest","__name__","RATE_RANGES","cleanText","1713","scrollIntoView","offsetParent","offsetTop","scrollTop","offsetHeight","TypeaheadItem","getRef","prevProps","isSelected","ref","PureComponent","TypeaheadGroup","Typeahead","1714","time_format","secPerTick","__WEBPACK_IMPORTED_MODULE_0_jquery__","__WEBPACK_IMPORTED_MODULE_0_jquery___default","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2_moment__","__WEBPACK_IMPORTED_MODULE_2_moment___default","__WEBPACK_IMPORTED_MODULE_3_vendor_flot_jquery_flot__","__WEBPACK_IMPORTED_MODULE_4_vendor_flot_jquery_flot_time__","__WEBPACK_IMPORTED_MODULE_5_app_core_utils_datemath__","__WEBPACK_IMPORTED_MODULE_6__Legend__","FLOT_OPTIONS","linewidth","labelMarginX","Graph","userOptions","getFlotPairs","$el","isMoment","valueOf","dynamicOptions","1715","LegendItem","Legend","1716","EMPTY_TABLE","columns","rows","Table","col","row","1717","parseTime","isUtc","asString","epoch","__WEBPACK_IMPORTED_MODULE_1_moment___default","DATE_FORMAT","DEFAULT_RANGE","__WEBPACK_IMPORTED_MODULE_1_moment__","__WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__","__WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__","TimePicker","handleChangeFrom","fromRaw","handleChangeTo","toRaw","handleClickApply","rangeString","isOpen","handleClickLeft","handleClickPicker","handleClickRight","handleClickRefresh","handleClickRelativeOption","dropdownRef","dropdownEl","refreshInterval","timespan","getTimeOptions","renderDropdown","timeOptions","section","option","display","1718","buildQueryOptions","targets","expr","generateQueryKey","random","ensureQueries","hasQuery","some"],"mappings":"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","file":"1.dbd4626b9332282e4156.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1661:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Explore__ = __webpack_require__(1700);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\nvar Wrapper = /** @class */ (function (_super) {\n    __extends(Wrapper, _super);\n    function Wrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            initialState: null,\n            split: false,\n        };\n        _this.handleChangeSplit = function (split, initialState) {\n            _this.setState({ split: split, initialState: initialState });\n        };\n        return _this;\n    }\n    Wrapper.prototype.render = function () {\n        // State overrides for props from first Explore\n        var _a = this.state, initialState = _a.initialState, split = _a.split;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"explore-wrapper\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Explore__[\"a\" /* default */], __assign({}, this.props, { position: \"left\", onChangeSplit: this.handleChangeSplit, split: split })),\n            split ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Explore__[\"a\" /* default */], __assign({}, this.props, { initialState: initialState, onChangeSplit: this.handleChangeSplit, position: \"right\", split: split }))) : null));\n    };\n    return Wrapper;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (Wrapper);\n\n\n/***/ }),\n\n/***/ 1665:\n/***/ (function(module, exports) {\n\n/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t\tthis._textSizeCache = window.flotTextSizeCache = window.flotTextSizeCache || {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text flot-temp-elem'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n      info = styleCache[text] = { element: element, positions: [] };\n\n      var size = this._textSizeCache[text];\n\t\t\tif (size) {\n        info.width = size.width;\n        info.height = size.height;\n\t\t\t} else {\n        info.width = element.outerWidth(true);\n        info.height = element.outerHeight(true);\n        this._textSizeCache[text] = { width: info.width, height: info.height };\n\t\t\t}\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    eventSectionHeight: 0, // space for event section\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            processRange: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n\n                    if (insertSteps && k > 0 && (!nullify || points[k - ps] != null)) {\n                        // copy the point to make room for a middle point\n                        for (m = 0; m < ps; ++m)\n                            points[k + ps + m] = points[k + m];\n\n                        // middle point has same y\n                        points[k + 1] = points[k - ps + 1] || 0;\n\n                        // if series has null values, let's give the last !null value a nice step\n                        if(nullify)\n                        \tpoints[k] = p[0];\n\n                        // we've added a point, better reflect that\n                        k += ps;\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n\n                // grafana\n                if (s.transform === 'negative-Y') {\n                  for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                      val = points[j + 1];\n                      points[j + 1] = -val;\n                  }\n                }\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.find(\".flot-temp-elem\").remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                /// Grafana fix, add +1 to label width\n                labelWidth = Math.max(labelWidth, info.width + 1);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                eventSectionPadding = options.grid.eventSectionHeight,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                // Add space for event section\n                lh += padding;\n                lh += eventSectionPadding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.box.eventSectionPadding = eventSectionPadding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            executeHooks(hooks.processRange, []);\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                var snaped = false;\n                for (var i = 0; i < 2; i++) {\n                    $.each(allocatedAxes, function (_, axis) {\n                        // make the ticks\n                        setupTickGeneration(axis);\n                        setTicks(axis);\n                        snaped = snapRangeToTicks(axis, axis.ticks) || snaped;\n                        // find labelWidth/Height for axis\n                        measureTickLabels(axis);\n                    });\n\n                    if (snaped && hooks.processRange.length > 0) {\n                        executeHooks(hooks.processRange, []);\n                        snaped = false;\n                    } else {\n                        break;\n                    }\n                }\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // Grafana fix: wide Y min and max using increased wideFactor\n                // when all series values are the same\n                var wideFactor = 0.25;\n                var widen = Math.abs(max == 0 ? 1 : max * wideFactor);\n\n                if (opts.min == null) {\n                  min -= widen;\n                }\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null) {\n                  max += widen;\n                }\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n            // grafana addition\n            axis.scaledDecimals = axis.tickDecimals - Math.floor(Math.log(axis.tickSize) / Math.LN10);\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            var changed = false;\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null) {\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                    changed = true;\n                }\n                if (axis.options.max == null && ticks.length > 1) {\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n                    changed = true;\n                }\n            }\n            return changed;\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);\n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding + box.eventSectionPadding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very\n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be\n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n          if (plot.isSelecting) {\n            return;\n          }\n\n          triggerClickHoverEvent(\"plotclick\", e, function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            // Add ctrlKey and metaKey to event\n            pos.ctrlKey = event.ctrlKey;\n            pos.metaKey = event.metaKey;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n\n\n/***/ }),\n\n/***/ 1668:\n/***/ (function(module, exports) {\n\n/* Pretty handling of time axes.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate(), \"\"); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1, \"\"); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"],\n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"],\n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\n})(jQuery);\n\n\n/***/ }),\n\n/***/ 1700:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(module) {/* unused harmony export Explore */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_hot_loader__ = __webpack_require__(123);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_hot_loader___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_hot_loader__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_app_core_utils_colors__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_app_core_time_series2__ = __webpack_require__(268);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ElapsedTime__ = __webpack_require__(1701);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__QueryRows__ = __webpack_require__(1702);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Graph__ = __webpack_require__(1714);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Table__ = __webpack_require__(1716);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__TimePicker__ = __webpack_require__(1717);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_query__ = __webpack_require__(1718);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_app_core_utils_location_util__ = __webpack_require__(171);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\nfunction makeTimeSeriesList(dataList, options) {\n    return dataList.map(function (seriesData, index) {\n        var datapoints = seriesData.datapoints || [];\n        var alias = seriesData.target;\n        var colorIndex = index % __WEBPACK_IMPORTED_MODULE_2_app_core_utils_colors__[\"f\" /* default */].length;\n        var color = __WEBPACK_IMPORTED_MODULE_2_app_core_utils_colors__[\"f\" /* default */][colorIndex];\n        var series = new __WEBPACK_IMPORTED_MODULE_3_app_core_time_series2__[\"a\" /* default */]({\n            datapoints: datapoints,\n            alias: alias,\n            color: color,\n            unit: seriesData.unit,\n        });\n        return series;\n    });\n}\nfunction parseInitialState(initial) {\n    try {\n        var parsed = JSON.parse(Object(__WEBPACK_IMPORTED_MODULE_10_app_core_utils_location_util__[\"a\" /* decodePathComponent */])(initial));\n        return {\n            queries: parsed.queries.map(function (q) { return q.query; }),\n            range: parsed.range,\n        };\n    }\n    catch (e) {\n        console.error(e);\n        return { queries: [], range: __WEBPACK_IMPORTED_MODULE_8__TimePicker__[\"a\" /* DEFAULT_RANGE */] };\n    }\n}\n// @observer\nvar Explore = /** @class */ (function (_super) {\n    __extends(Explore, _super);\n    function Explore(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleAddQueryRow = function (index) {\n            var queries = _this.state.queries;\n            var nextQueries = queries.slice(0, index + 1).concat([\n                { query: '', key: Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"c\" /* generateQueryKey */])() }\n            ], queries.slice(index + 1));\n            _this.setState({ queries: nextQueries });\n        };\n        _this.handleChangeQuery = function (query, index) {\n            var queries = _this.state.queries;\n            var nextQuery = __assign({}, queries[index], { query: query });\n            var nextQueries = queries.slice();\n            nextQueries[index] = nextQuery;\n            _this.setState({ queries: nextQueries });\n        };\n        _this.handleChangeTime = function (nextRange) {\n            var range = {\n                from: nextRange.from,\n                to: nextRange.to,\n            };\n            _this.setState({ range: range }, function () { return _this.handleSubmit(); });\n        };\n        _this.handleClickCloseSplit = function () {\n            var onChangeSplit = _this.props.onChangeSplit;\n            if (onChangeSplit) {\n                onChangeSplit(false);\n            }\n        };\n        _this.handleClickGraphButton = function () {\n            _this.setState(function (state) { return ({ showingGraph: !state.showingGraph }); });\n        };\n        _this.handleClickSplit = function () {\n            var onChangeSplit = _this.props.onChangeSplit;\n            if (onChangeSplit) {\n                onChangeSplit(true, _this.state);\n            }\n        };\n        _this.handleClickTableButton = function () {\n            _this.setState(function (state) { return ({ showingTable: !state.showingTable }); });\n        };\n        _this.handleRemoveQueryRow = function (index) {\n            var queries = _this.state.queries;\n            if (queries.length <= 1) {\n                return;\n            }\n            var nextQueries = queries.slice(0, index).concat(queries.slice(index + 1));\n            _this.setState({ queries: nextQueries }, function () { return _this.handleSubmit(); });\n        };\n        _this.handleSubmit = function () {\n            var _a = _this.state, showingGraph = _a.showingGraph, showingTable = _a.showingTable;\n            if (showingTable) {\n                _this.runTableQuery();\n            }\n            if (showingGraph) {\n                _this.runGraphQuery();\n            }\n        };\n        _this.request = function (url) {\n            var datasource = _this.state.datasource;\n            return datasource.metadataRequest(url);\n        };\n        var _a = parseInitialState(props.routeParams.initial), range = _a.range, queries = _a.queries;\n        _this.state = __assign({ datasource: null, datasourceError: null, datasourceLoading: true, graphResult: null, latency: 0, loading: false, queries: Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"b\" /* ensureQueries */])(queries), queryError: null, range: range || __assign({}, __WEBPACK_IMPORTED_MODULE_8__TimePicker__[\"a\" /* DEFAULT_RANGE */]), requestOptions: null, showingGraph: true, showingTable: true, tableResult: null }, props.initialState);\n        return _this;\n    }\n    Explore.prototype.componentDidMount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var datasource, testResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.props.datasourceSrv.get()];\n                    case 1:\n                        datasource = _a.sent();\n                        return [4 /*yield*/, datasource.testDatasource()];\n                    case 2:\n                        testResult = _a.sent();\n                        if (testResult.status === 'success') {\n                            this.setState({ datasource: datasource, datasourceError: null, datasourceLoading: false }, function () { return _this.handleSubmit(); });\n                        }\n                        else {\n                            this.setState({ datasource: null, datasourceError: testResult.message, datasourceLoading: false });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Explore.prototype.componentDidCatch = function (error) {\n        console.error(error);\n    };\n    Explore.prototype.runGraphQuery = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, datasource, queries, range, now, options, res, result, latency, response_1, queryError;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.state, datasource = _a.datasource, queries = _a.queries, range = _a.range;\n                        if (!Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"d\" /* hasQuery */])(queries)) {\n                            return [2 /*return*/];\n                        }\n                        this.setState({ latency: 0, loading: true, graphResult: null, queryError: null });\n                        now = Date.now();\n                        options = Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"a\" /* buildQueryOptions */])({\n                            format: 'time_series',\n                            interval: datasource.interval,\n                            instant: false,\n                            range: range,\n                            queries: queries.map(function (q) { return q.query; }),\n                        });\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, datasource.query(options)];\n                    case 2:\n                        res = _b.sent();\n                        result = makeTimeSeriesList(res.data, options);\n                        latency = Date.now() - now;\n                        this.setState({ latency: latency, loading: false, graphResult: result, requestOptions: options });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        response_1 = _b.sent();\n                        console.error(response_1);\n                        queryError = response_1.data ? response_1.data.error : response_1;\n                        this.setState({ loading: false, queryError: queryError });\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Explore.prototype.runTableQuery = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, datasource, queries, range, now, options, res, tableModel, latency, response_2, queryError;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.state, datasource = _a.datasource, queries = _a.queries, range = _a.range;\n                        if (!Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"d\" /* hasQuery */])(queries)) {\n                            return [2 /*return*/];\n                        }\n                        this.setState({ latency: 0, loading: true, queryError: null, tableResult: null });\n                        now = Date.now();\n                        options = Object(__WEBPACK_IMPORTED_MODULE_9__utils_query__[\"a\" /* buildQueryOptions */])({\n                            format: 'table',\n                            interval: datasource.interval,\n                            instant: true,\n                            range: range,\n                            queries: queries.map(function (q) { return q.query; }),\n                        });\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, datasource.query(options)];\n                    case 2:\n                        res = _b.sent();\n                        tableModel = res.data[0];\n                        latency = Date.now() - now;\n                        this.setState({ latency: latency, loading: false, tableResult: tableModel, requestOptions: options });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        response_2 = _b.sent();\n                        console.error(response_2);\n                        queryError = response_2.data ? response_2.data.error : response_2;\n                        this.setState({ loading: false, queryError: queryError });\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Explore.prototype.render = function () {\n        var _a = this.props, position = _a.position, split = _a.split;\n        var _b = this.state, datasource = _b.datasource, datasourceError = _b.datasourceError, datasourceLoading = _b.datasourceLoading, graphResult = _b.graphResult, latency = _b.latency, loading = _b.loading, queries = _b.queries, queryError = _b.queryError, range = _b.range, requestOptions = _b.requestOptions, showingGraph = _b.showingGraph, showingTable = _b.showingTable, tableResult = _b.tableResult;\n        var showingBoth = showingGraph && showingTable;\n        var graphHeight = showingBoth ? '200px' : '400px';\n        var graphButtonActive = showingBoth || showingGraph ? 'active' : '';\n        var tableButtonActive = showingBoth || showingTable ? 'active' : '';\n        var exploreClass = split ? 'explore explore-split' : 'explore';\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: exploreClass },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar\" },\n                position === 'left' ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", null,\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\", { className: \"navbar-page-btn\" },\n                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-rocket\" }),\n                        \"Explore\"))) : (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar-buttons explore-first-button\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button\", onClick: this.handleClickCloseSplit }, \"Close Split\"))),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar__spacer\" }),\n                position === 'left' && !split ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar-buttons\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button\", onClick: this.handleClickSplit }, \"Split\"))) : null,\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar-buttons\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button \" + graphButtonActive, onClick: this.handleClickGraphButton }, \"Graph\"),\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button \" + tableButtonActive, onClick: this.handleClickTableButton }, \"Table\")),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__TimePicker__[\"b\" /* default */], { range: range, onChangeTime: this.handleChangeTime }),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar-buttons relative\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button--primary\", onClick: this.handleSubmit },\n                        \"Run Query \",\n                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-level-down run-icon\" })),\n                    loading || latency ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__ElapsedTime__[\"a\" /* default */], { time: latency, className: \"text-info\" }) : null)),\n            datasourceLoading ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"explore-container\" }, \"Loading datasource...\") : null,\n            datasourceError ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"explore-container\", title: datasourceError }, \"Error connecting to datasource.\")) : null,\n            datasource ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"explore-container\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__QueryRows__[\"a\" /* default */], { queries: queries, request: this.request, onAddQueryRow: this.handleAddQueryRow, onChangeQuery: this.handleChangeQuery, onExecuteQuery: this.handleSubmit, onRemoveQueryRow: this.handleRemoveQueryRow }),\n                queryError ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"text-warning m-a-2\" }, queryError) : null,\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"main\", { className: \"m-t-2\" },\n                    showingGraph ? (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__Graph__[\"a\" /* default */], { data: graphResult, id: \"explore-graph-\" + position, options: requestOptions, height: graphHeight, split: split })) : null,\n                    showingTable ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__Table__[\"a\" /* default */], { data: tableResult, className: \"m-t-3\" }) : null))) : null));\n    };\n    return Explore;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component));\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_hot_loader__[\"hot\"])(module)(Explore));\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(122)(module)))\n\n/***/ }),\n\n/***/ 1701:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar INTERVAL = 150;\nvar ElapsedTime = /** @class */ (function (_super) {\n    __extends(ElapsedTime, _super);\n    function ElapsedTime() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            elapsed: 0,\n        };\n        _this.tick = function () {\n            var jetzt = Date.now();\n            var elapsed = jetzt - _this.offset;\n            _this.setState({ elapsed: elapsed });\n        };\n        return _this;\n    }\n    ElapsedTime.prototype.start = function () {\n        this.offset = Date.now();\n        this.timer = window.setInterval(this.tick, INTERVAL);\n    };\n    ElapsedTime.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.time) {\n            clearInterval(this.timer);\n        }\n        else if (this.props.time) {\n            this.start();\n        }\n    };\n    ElapsedTime.prototype.componentDidMount = function () {\n        this.start();\n    };\n    ElapsedTime.prototype.componentWillUnmount = function () {\n        clearInterval(this.timer);\n    };\n    ElapsedTime.prototype.render = function () {\n        var elapsed = this.state.elapsed;\n        var _a = this.props, className = _a.className, time = _a.time;\n        var value = (time || elapsed) / 1000;\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\", { className: \"elapsed-time \" + className },\n            value.toFixed(1),\n            \"s\");\n    };\n    return ElapsedTime;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (ElapsedTime);\n\n\n/***/ }),\n\n/***/ 1702:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__QueryField__ = __webpack_require__(1703);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\n\n\nvar QueryRow = /** @class */ (function (_super) {\n    __extends(QueryRow, _super);\n    function QueryRow(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleChangeQuery = function (value) {\n            var _a = _this.props, index = _a.index, onChangeQuery = _a.onChangeQuery;\n            var query = _this.state.query;\n            var edited = query !== value;\n            _this.setState({ edited: edited, query: value });\n            if (onChangeQuery) {\n                onChangeQuery(value, index);\n            }\n        };\n        _this.handleClickAddButton = function () {\n            var _a = _this.props, index = _a.index, onAddQueryRow = _a.onAddQueryRow;\n            if (onAddQueryRow) {\n                onAddQueryRow(index);\n            }\n        };\n        _this.handleClickRemoveButton = function () {\n            var _a = _this.props, index = _a.index, onRemoveQueryRow = _a.onRemoveQueryRow;\n            if (onRemoveQueryRow) {\n                onRemoveQueryRow(index);\n            }\n        };\n        _this.handlePressEnter = function () {\n            var onExecuteQuery = _this.props.onExecuteQuery;\n            if (onExecuteQuery) {\n                onExecuteQuery();\n            }\n        };\n        _this.state = {\n            edited: false,\n            query: props.query || '',\n        };\n        return _this;\n    }\n    QueryRow.prototype.render = function () {\n        var request = this.props.request;\n        var _a = this.state, edited = _a.edited, query = _a.query;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"query-row\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"query-row-tools\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button navbar-button--tight\", onClick: this.handleClickAddButton },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-plus\" })),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button navbar-button--tight\", onClick: this.handleClickRemoveButton },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-minus\" }))),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"query-field-wrapper\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__QueryField__[\"a\" /* default */], { initialQuery: edited ? null : query, onPressEnter: this.handlePressEnter, onQueryChange: this.handleChangeQuery, placeholder: \"Enter a PromQL query\", request: request }))));\n    };\n    return QueryRow;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\nvar QueryRows = /** @class */ (function (_super) {\n    __extends(QueryRows, _super);\n    function QueryRows() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    QueryRows.prototype.render = function () {\n        var _a = this.props, _b = _a.className, className = _b === void 0 ? '' : _b, queries = _a.queries, handlers = __rest(_a, [\"className\", \"queries\"]);\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: className }, queries.map(function (q, index) { return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(QueryRow, __assign({ key: q.key, index: index, query: q.query }, handlers)); })));\n    };\n    return QueryRows;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (QueryRows);\n\n\n/***/ }),\n\n/***/ 1703:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_slate__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_slate_react__ = __webpack_require__(600);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_slate_plain_serializer__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_dom__ = __webpack_require__(1704);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__slate_plugins_braces__ = __webpack_require__(1705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__slate_plugins_clear__ = __webpack_require__(1706);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__slate_plugins_newline__ = __webpack_require__(1707);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__slate_plugins_prism_index__ = __webpack_require__(1708);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__slate_plugins_runner__ = __webpack_require__(1710);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__utils_debounce__ = __webpack_require__(1711);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__utils_prometheus__ = __webpack_require__(1712);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__Typeahead__ = __webpack_require__(1713);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n// dom also includes Element polyfills\n\n\n\n\n\n\n\n\n\nvar EMPTY_METRIC = '';\nvar TYPEAHEAD_DEBOUNCE = 300;\nfunction flattenSuggestions(s) {\n    return s ? s.reduce(function (acc, g) { return acc.concat(g.items); }, []) : [];\n}\nvar getInitialValue = function (query) {\n    return __WEBPACK_IMPORTED_MODULE_2_slate__[\"Value\"].fromJSON({\n        document: {\n            nodes: [\n                {\n                    object: 'block',\n                    type: 'paragraph',\n                    nodes: [\n                        {\n                            object: 'text',\n                            leaves: [\n                                {\n                                    text: query,\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n    });\n};\nvar Portal = /** @class */ (function (_super) {\n    __extends(Portal, _super);\n    function Portal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.node = document.createElement('div');\n        _this.node.classList.add('explore-typeahead', \"explore-typeahead-\" + props.index);\n        document.body.appendChild(_this.node);\n        return _this;\n    }\n    Portal.prototype.componentWillUnmount = function () {\n        document.body.removeChild(this.node);\n    };\n    Portal.prototype.render = function () {\n        return __WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.createPortal(this.props.children, this.node);\n    };\n    return Portal;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component));\nvar QueryField = /** @class */ (function (_super) {\n    __extends(QueryField, _super);\n    function QueryField(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.onChange = function (_a) {\n            var value = _a.value;\n            var changed = value.document !== _this.state.value.document;\n            _this.setState({ value: value }, function () {\n                if (changed) {\n                    _this.handleChangeQuery();\n                }\n            });\n            window.requestAnimationFrame(_this.handleTypeahead);\n        };\n        _this.onMetricsReceived = function () {\n            if (!_this.state.metrics) {\n                return;\n            }\n            Object(__WEBPACK_IMPORTED_MODULE_9__slate_plugins_prism_index__[\"a\" /* configurePrismMetricsTokens */])(_this.state.metrics);\n            // Trigger re-render\n            window.requestAnimationFrame(function () {\n                // Bogus edit to trigger highlighting\n                var change = _this.state.value\n                    .change()\n                    .insertText(' ')\n                    .deleteBackward(1);\n                _this.onChange(change);\n            });\n        };\n        _this.request = function (url) {\n            if (_this.props.request) {\n                return _this.props.request(url);\n            }\n            return fetch(url);\n        };\n        _this.handleChangeQuery = function () {\n            // Send text change to parent\n            var onQueryChange = _this.props.onQueryChange;\n            if (onQueryChange) {\n                onQueryChange(__WEBPACK_IMPORTED_MODULE_4_slate_plain_serializer__[\"default\"].serialize(_this.state.value));\n            }\n        };\n        _this.handleTypeahead = Object(__WEBPACK_IMPORTED_MODULE_11__utils_debounce__[\"a\" /* default */])(function () {\n            var selection = window.getSelection();\n            if (selection.anchorNode) {\n                var wrapperNode = selection.anchorNode.parentElement;\n                var editorNode = wrapperNode.closest('.query-field');\n                if (!editorNode || _this.state.value.isBlurred) {\n                    // Not inside this editor\n                    return;\n                }\n                var range = selection.getRangeAt(0);\n                var text = selection.anchorNode.textContent;\n                var offset = range.startOffset;\n                var prefix_1 = Object(__WEBPACK_IMPORTED_MODULE_12__utils_prometheus__[\"b\" /* cleanText */])(text.substr(0, offset));\n                // Determine candidates by context\n                var suggestionGroups = [];\n                var wrapperClasses = wrapperNode.classList;\n                var typeaheadContext = null;\n                // Take first metric as lucky guess\n                var metricNode = editorNode.querySelector('.metric');\n                if (wrapperClasses.contains('context-range')) {\n                    // Rate ranges\n                    typeaheadContext = 'context-range';\n                    suggestionGroups.push({\n                        label: 'Range vector',\n                        items: __WEBPACK_IMPORTED_MODULE_12__utils_prometheus__[\"a\" /* RATE_RANGES */].slice(),\n                    });\n                }\n                else if (wrapperClasses.contains('context-labels') && metricNode) {\n                    var metric = metricNode.textContent;\n                    var labelKeys = _this.state.labelKeys[metric];\n                    if (labelKeys) {\n                        if ((text && text.startsWith('=')) || wrapperClasses.contains('attr-value')) {\n                            // Label values\n                            var labelKeyNode = Object(__WEBPACK_IMPORTED_MODULE_5__utils_dom__[\"b\" /* getPreviousCousin */])(wrapperNode, '.attr-name');\n                            if (labelKeyNode) {\n                                var labelKey = labelKeyNode.textContent;\n                                var labelValues = _this.state.labelValues[metric][labelKey];\n                                typeaheadContext = 'context-label-values';\n                                suggestionGroups.push({\n                                    label: 'Label values',\n                                    items: labelValues,\n                                });\n                            }\n                        }\n                        else {\n                            // Label keys\n                            typeaheadContext = 'context-labels';\n                            suggestionGroups.push({ label: 'Labels', items: labelKeys });\n                        }\n                    }\n                    else {\n                        _this.fetchMetricLabels(metric);\n                    }\n                }\n                else if (wrapperClasses.contains('context-labels') && !metricNode) {\n                    // Empty name queries\n                    var defaultKeys = ['job', 'instance'];\n                    // Munge all keys that we have seen together\n                    var labelKeys = Object.keys(_this.state.labelKeys).reduce(function (acc, metric) {\n                        return acc.concat(_this.state.labelKeys[metric].filter(function (key) { return acc.indexOf(key) === -1; }));\n                    }, defaultKeys);\n                    if ((text && text.startsWith('=')) || wrapperClasses.contains('attr-value')) {\n                        // Label values\n                        var labelKeyNode = Object(__WEBPACK_IMPORTED_MODULE_5__utils_dom__[\"b\" /* getPreviousCousin */])(wrapperNode, '.attr-name');\n                        if (labelKeyNode) {\n                            var labelKey = labelKeyNode.textContent;\n                            if (_this.state.labelValues[EMPTY_METRIC]) {\n                                var labelValues = _this.state.labelValues[EMPTY_METRIC][labelKey];\n                                typeaheadContext = 'context-label-values';\n                                suggestionGroups.push({\n                                    label: 'Label values',\n                                    items: labelValues,\n                                });\n                            }\n                            else {\n                                // Can only query label values for now (API to query keys is under development)\n                                _this.fetchLabelValues(labelKey);\n                            }\n                        }\n                    }\n                    else {\n                        // Label keys\n                        typeaheadContext = 'context-labels';\n                        suggestionGroups.push({ label: 'Labels', items: labelKeys });\n                    }\n                }\n                else if (metricNode && wrapperClasses.contains('context-aggregation')) {\n                    typeaheadContext = 'context-aggregation';\n                    var metric = metricNode.textContent;\n                    var labelKeys = _this.state.labelKeys[metric];\n                    if (labelKeys) {\n                        suggestionGroups.push({ label: 'Labels', items: labelKeys });\n                    }\n                    else {\n                        _this.fetchMetricLabels(metric);\n                    }\n                }\n                else if ((_this.state.metrics && ((prefix_1 && !wrapperClasses.contains('token')) || text.match(/[+\\-*/^%]/))) ||\n                    wrapperClasses.contains('context-function')) {\n                    // Need prefix for metrics\n                    typeaheadContext = 'context-metrics';\n                    suggestionGroups.push({\n                        label: 'Metrics',\n                        items: _this.state.metrics,\n                    });\n                }\n                var results_1 = 0;\n                var filteredSuggestions = suggestionGroups.map(function (group) {\n                    if (group.items) {\n                        group.items = group.items.filter(function (c) { return c.length !== prefix_1.length && c.indexOf(prefix_1) > -1; });\n                        results_1 += group.items.length;\n                    }\n                    return group;\n                });\n                console.log('handleTypeahead', selection.anchorNode, wrapperClasses, text, offset, prefix_1, typeaheadContext);\n                _this.setState({\n                    typeaheadPrefix: prefix_1,\n                    typeaheadContext: typeaheadContext,\n                    typeaheadText: text,\n                    suggestions: results_1 > 0 ? filteredSuggestions : [],\n                });\n            }\n        }, TYPEAHEAD_DEBOUNCE);\n        _this.onKeyDown = function (event, change) {\n            if (_this.menuEl) {\n                var _a = _this.state, typeaheadIndex = _a.typeaheadIndex, suggestions = _a.suggestions;\n                switch (event.key) {\n                    case 'Escape': {\n                        if (_this.menuEl) {\n                            event.preventDefault();\n                            _this.resetTypeahead();\n                            return true;\n                        }\n                        break;\n                    }\n                    case 'Tab': {\n                        // Dont blur input\n                        event.preventDefault();\n                        if (!suggestions || suggestions.length === 0) {\n                            return undefined;\n                        }\n                        // Get the currently selected suggestion\n                        var flattenedSuggestions = flattenSuggestions(suggestions);\n                        var selected = Math.abs(typeaheadIndex);\n                        var selectedIndex = selected % flattenedSuggestions.length || 0;\n                        var suggestion = flattenedSuggestions[selectedIndex];\n                        _this.applyTypeahead(change, suggestion);\n                        return true;\n                    }\n                    case 'ArrowDown': {\n                        // Select next suggestion\n                        event.preventDefault();\n                        _this.setState({ typeaheadIndex: typeaheadIndex + 1 });\n                        break;\n                    }\n                    case 'ArrowUp': {\n                        // Select previous suggestion\n                        event.preventDefault();\n                        _this.setState({ typeaheadIndex: Math.max(0, typeaheadIndex - 1) });\n                        break;\n                    }\n                    default: {\n                        // console.log('default key', event.key, event.which, event.charCode, event.locale, data.key);\n                        break;\n                    }\n                }\n            }\n            return undefined;\n        };\n        _this.resetTypeahead = function () {\n            _this.setState({\n                suggestions: [],\n                typeaheadIndex: 0,\n                typeaheadPrefix: '',\n                typeaheadContext: null,\n            });\n        };\n        _this.handleBlur = function () {\n            var onBlur = _this.props.onBlur;\n            // If we dont wait here, menu clicks wont work because the menu\n            // will be gone.\n            _this.resetTimer = setTimeout(_this.resetTypeahead, 100);\n            if (onBlur) {\n                onBlur();\n            }\n        };\n        _this.handleFocus = function () {\n            var onFocus = _this.props.onFocus;\n            if (onFocus) {\n                onFocus();\n            }\n        };\n        _this.handleClickMenu = function (item) {\n            // Manually triggering change\n            var change = _this.applyTypeahead(_this.state.value.change(), item);\n            _this.onChange(change);\n        };\n        _this.updateMenu = function () {\n            var suggestions = _this.state.suggestions;\n            var menu = _this.menuEl;\n            var selection = window.getSelection();\n            var node = selection.anchorNode;\n            // No menu, nothing to do\n            if (!menu) {\n                return;\n            }\n            // No suggestions or blur, remove menu\n            var hasSuggesstions = suggestions && suggestions.length > 0;\n            if (!hasSuggesstions) {\n                menu.removeAttribute('style');\n                return;\n            }\n            // Align menu overlay to editor node\n            if (node) {\n                var rect = node.parentElement.getBoundingClientRect();\n                menu.style.opacity = 1;\n                menu.style.top = rect.top + window.scrollY + rect.height + 4 + \"px\";\n                menu.style.left = rect.left + window.scrollX - 2 + \"px\";\n            }\n        };\n        _this.menuRef = function (el) {\n            _this.menuEl = el;\n        };\n        _this.renderMenu = function () {\n            var suggestions = _this.state.suggestions;\n            var hasSuggesstions = suggestions && suggestions.length > 0;\n            if (!hasSuggesstions) {\n                return null;\n            }\n            // Guard selectedIndex to be within the length of the suggestions\n            var selectedIndex = Math.max(_this.state.typeaheadIndex, 0);\n            var flattenedSuggestions = flattenSuggestions(suggestions);\n            selectedIndex = selectedIndex % flattenedSuggestions.length || 0;\n            var selectedKeys = flattenedSuggestions.length > 0 ? [flattenedSuggestions[selectedIndex]] : [];\n            // Create typeahead in DOM root so we can later position it absolutely\n            return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Portal, null,\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_13__Typeahead__[\"a\" /* default */], { menuRef: _this.menuRef, selectedItems: selectedKeys, onClickItem: _this.handleClickMenu, groupedItems: suggestions })));\n        };\n        _this.plugins = [\n            Object(__WEBPACK_IMPORTED_MODULE_6__slate_plugins_braces__[\"a\" /* default */])(),\n            Object(__WEBPACK_IMPORTED_MODULE_7__slate_plugins_clear__[\"a\" /* default */])(),\n            Object(__WEBPACK_IMPORTED_MODULE_10__slate_plugins_runner__[\"a\" /* default */])({ handler: props.onPressEnter }),\n            Object(__WEBPACK_IMPORTED_MODULE_8__slate_plugins_newline__[\"a\" /* default */])(),\n            Object(__WEBPACK_IMPORTED_MODULE_9__slate_plugins_prism_index__[\"b\" /* default */])(),\n        ];\n        _this.state = {\n            labelKeys: {},\n            labelValues: {},\n            metrics: props.metrics || [],\n            suggestions: [],\n            typeaheadIndex: 0,\n            typeaheadPrefix: '',\n            value: getInitialValue(props.initialQuery || ''),\n        };\n        return _this;\n    }\n    QueryField.prototype.componentDidMount = function () {\n        this.updateMenu();\n        if (this.props.metrics === undefined) {\n            this.fetchMetricNames();\n        }\n    };\n    QueryField.prototype.componentWillUnmount = function () {\n        clearTimeout(this.resetTimer);\n    };\n    QueryField.prototype.componentDidUpdate = function () {\n        this.updateMenu();\n    };\n    QueryField.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.metrics && nextProps.metrics !== this.props.metrics) {\n            this.setState({ metrics: nextProps.metrics }, this.onMetricsReceived);\n        }\n        // initialQuery is null in case the user typed\n        if (nextProps.initialQuery !== null && nextProps.initialQuery !== this.props.initialQuery) {\n            this.setState({ value: getInitialValue(nextProps.initialQuery) });\n        }\n    };\n    QueryField.prototype.applyTypeahead = function (change, suggestion) {\n        var _a = this.state, typeaheadPrefix = _a.typeaheadPrefix, typeaheadContext = _a.typeaheadContext, typeaheadText = _a.typeaheadText;\n        // Modify suggestion based on context\n        switch (typeaheadContext) {\n            case 'context-labels': {\n                var nextChar = Object(__WEBPACK_IMPORTED_MODULE_5__utils_dom__[\"a\" /* getNextCharacter */])();\n                if (!nextChar || nextChar === '}' || nextChar === ',') {\n                    suggestion += '=';\n                }\n                break;\n            }\n            case 'context-label-values': {\n                // Always add quotes and remove existing ones instead\n                if (!(typeaheadText.startsWith('=\"') || typeaheadText.startsWith('\"'))) {\n                    suggestion = \"\\\"\" + suggestion;\n                }\n                if (Object(__WEBPACK_IMPORTED_MODULE_5__utils_dom__[\"a\" /* getNextCharacter */])() !== '\"') {\n                    suggestion = suggestion + \"\\\"\";\n                }\n                break;\n            }\n            default:\n        }\n        this.resetTypeahead();\n        // Remove the current, incomplete text and replace it with the selected suggestion\n        var backward = typeaheadPrefix.length;\n        var text = Object(__WEBPACK_IMPORTED_MODULE_12__utils_prometheus__[\"b\" /* cleanText */])(typeaheadText);\n        var suffixLength = text.length - typeaheadPrefix.length;\n        var offset = typeaheadText.indexOf(typeaheadPrefix);\n        var midWord = typeaheadPrefix && ((suffixLength > 0 && offset > -1) || suggestion === typeaheadText);\n        var forward = midWord ? suffixLength + offset : 0;\n        return (change\n            // TODO this line breaks if cursor was moved left and length is longer than whole prefix\n            .deleteBackward(backward)\n            .deleteForward(forward)\n            .insertText(suggestion)\n            .focus());\n    };\n    QueryField.prototype.fetchLabelValues = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, res, body, pairs, values, labelValues, e_1, _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        url = \"/api/v1/label/\" + key + \"/values\";\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.request(url)];\n                    case 2:\n                        res = _c.sent();\n                        return [4 /*yield*/, (res.data || res.json())];\n                    case 3:\n                        body = _c.sent();\n                        pairs = this.state.labelValues[EMPTY_METRIC];\n                        values = __assign({}, pairs, (_a = {}, _a[key] = body.data, _a));\n                        labelValues = __assign({}, this.state.labelValues, (_b = {}, _b[EMPTY_METRIC] = values, _b));\n                        this.setState({ labelValues: labelValues }, this.handleTypeahead);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_1 = _c.sent();\n                        if (this.props.onRequestError) {\n                            this.props.onRequestError(e_1);\n                        }\n                        else {\n                            console.error(e_1);\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    QueryField.prototype.fetchMetricLabels = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, res, body, _a, keys, values, labelKeys, labelValues, e_2, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        url = \"/api/v1/series?match[]=\" + name;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.request(url)];\n                    case 2:\n                        res = _d.sent();\n                        return [4 /*yield*/, (res.data || res.json())];\n                    case 3:\n                        body = _d.sent();\n                        _a = Object(__WEBPACK_IMPORTED_MODULE_12__utils_prometheus__[\"c\" /* processLabels */])(body.data), keys = _a.keys, values = _a.values;\n                        labelKeys = __assign({}, this.state.labelKeys, (_b = {}, _b[name] = keys, _b));\n                        labelValues = __assign({}, this.state.labelValues, (_c = {}, _c[name] = values, _c));\n                        this.setState({ labelKeys: labelKeys, labelValues: labelValues }, this.handleTypeahead);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_2 = _d.sent();\n                        if (this.props.onRequestError) {\n                            this.props.onRequestError(e_2);\n                        }\n                        else {\n                            console.error(e_2);\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    QueryField.prototype.fetchMetricNames = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, res, body, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = '/api/v1/label/__name__/values';\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.request(url)];\n                    case 2:\n                        res = _a.sent();\n                        return [4 /*yield*/, (res.data || res.json())];\n                    case 3:\n                        body = _a.sent();\n                        this.setState({ metrics: body.data }, this.onMetricsReceived);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        if (this.props.onRequestError) {\n                            this.props.onRequestError(error_1);\n                        }\n                        else {\n                            console.error(error_1);\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    QueryField.prototype.render = function () {\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"query-field\" },\n            this.renderMenu(),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_slate_react__[\"Editor\"], { autoCorrect: false, onBlur: this.handleBlur, onKeyDown: this.onKeyDown, onChange: this.onChange, onFocus: this.handleFocus, placeholder: this.props.placeholder, plugins: this.plugins, spellCheck: false, value: this.state.value })));\n    };\n    return QueryField;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component));\n/* harmony default export */ __webpack_exports__[\"a\"] = (QueryField);\n\n\n/***/ }),\n\n/***/ 1704:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getPreviousCousin;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getNextCharacter;\n// Node.closest() polyfill\nif ('Element' in window && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        var el = this;\n        var i;\n        // eslint-disable-next-line\n        do {\n            i = matches.length;\n            // eslint-disable-next-line\n            while (--i >= 0 && matches.item(i) !== el) { }\n        } while (i < 0 && (el = el.parentElement));\n        return el;\n    };\n}\nfunction getPreviousCousin(node, selector) {\n    var sibling = node.parentElement.previousSibling;\n    var el;\n    while (sibling) {\n        el = sibling.querySelector(selector);\n        if (el) {\n            return el;\n        }\n        sibling = sibling.previousSibling;\n    }\n    return undefined;\n}\nfunction getNextCharacter(global) {\n    if (global === void 0) { global = window; }\n    var selection = global.getSelection();\n    if (!selection.anchorNode) {\n        return null;\n    }\n    var range = selection.getRangeAt(0);\n    var text = selection.anchorNode.textContent;\n    var offset = range.startOffset;\n    return text.substr(offset, 1);\n}\n\n\n/***/ }),\n\n/***/ 1705:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = BracesPlugin;\nvar BRACES = {\n    '[': ']',\n    '{': '}',\n    '(': ')',\n};\nfunction BracesPlugin() {\n    return {\n        onKeyDown: function (event, change) {\n            var value = change.value;\n            if (!value.isCollapsed) {\n                return undefined;\n            }\n            switch (event.key) {\n                case '{':\n                case '[': {\n                    event.preventDefault();\n                    // Insert matching braces\n                    change\n                        .insertText(\"\" + event.key + BRACES[event.key])\n                        .move(-1)\n                        .focus();\n                    return true;\n                }\n                case '(': {\n                    event.preventDefault();\n                    var text = value.anchorText.text;\n                    var offset = value.anchorOffset;\n                    var space = text.indexOf(' ', offset);\n                    var length_1 = space > 0 ? space : text.length;\n                    var forward = length_1 - offset;\n                    // Insert matching braces\n                    change\n                        .insertText(event.key)\n                        .move(forward)\n                        .insertText(BRACES[event.key])\n                        .move(-1 - forward)\n                        .focus();\n                    return true;\n                }\n                default: {\n                    break;\n                }\n            }\n            return undefined;\n        },\n    };\n}\n\n\n/***/ }),\n\n/***/ 1706:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ClearPlugin;\n// Clears the rest of the line after the caret\nfunction ClearPlugin() {\n    return {\n        onKeyDown: function (event, change) {\n            var value = change.value;\n            if (!value.isCollapsed) {\n                return undefined;\n            }\n            if (event.key === 'k' && event.ctrlKey) {\n                event.preventDefault();\n                var text = value.anchorText.text;\n                var offset = value.anchorOffset;\n                var length_1 = text.length;\n                var forward = length_1 - offset;\n                change.deleteForward(forward);\n                return true;\n            }\n            return undefined;\n        },\n    };\n}\n\n\n/***/ }),\n\n/***/ 1707:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NewlinePlugin;\nfunction getIndent(text) {\n    var offset = text.length - text.trimLeft().length;\n    if (offset) {\n        var indent = text[0];\n        while (--offset) {\n            indent += text[0];\n        }\n        return indent;\n    }\n    return '';\n}\nfunction NewlinePlugin() {\n    return {\n        onKeyDown: function (event, change) {\n            var value = change.value;\n            if (!value.isCollapsed) {\n                return undefined;\n            }\n            if (event.key === 'Enter' && event.shiftKey) {\n                event.preventDefault();\n                var startBlock = value.startBlock;\n                var currentLineText = startBlock.text;\n                var indent = getIndent(currentLineText);\n                return change\n                    .splitBlock()\n                    .insertText(indent)\n                    .focus();\n            }\n        },\n    };\n}\n\n\n/***/ }),\n\n/***/ 1708:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = configurePrismMetricsTokens;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = PrismPlugin;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prismjs__ = __webpack_require__(601);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prismjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prismjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__promql__ = __webpack_require__(1709);\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_prismjs___default.a.languages.promql = __WEBPACK_IMPORTED_MODULE_2__promql__[\"a\" /* default */];\nvar TOKEN_MARK = 'prism-token';\nfunction configurePrismMetricsTokens(metrics) {\n    __WEBPACK_IMPORTED_MODULE_1_prismjs___default.a.languages.promql.metric = {\n        alias: 'variable',\n        pattern: new RegExp(\"(?:^|\\\\s)(\" + metrics.join('|') + \")(?:$|\\\\s)\"),\n    };\n}\n/**\n * Code-highlighting plugin based on Prism and\n * https://github.com/ianstormtaylor/slate/blob/master/examples/code-highlighting/index.js\n *\n * (Adapted to handle nested grammar definitions.)\n */\nfunction PrismPlugin() {\n    return {\n        /**\n         * Render a Slate mark with appropiate CSS class names\n         *\n         * @param {Object} props\n         * @return {Element}\n         */\n        renderMark: function (props) {\n            var children = props.children, mark = props.mark;\n            // Only apply spans to marks identified by this plugin\n            if (mark.type !== TOKEN_MARK) {\n                return undefined;\n            }\n            var className = \"token \" + mark.data.get('types');\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\", { className: className }, children);\n        },\n        /**\n         * Decorate code blocks with Prism.js highlighting.\n         *\n         * @param {Node} node\n         * @return {Array}\n         */\n        decorateNode: function (node) {\n            if (node.type !== 'paragraph') {\n                return [];\n            }\n            var texts = node.getTexts().toArray();\n            var tstring = texts.map(function (t) { return t.text; }).join('\\n');\n            var grammar = __WEBPACK_IMPORTED_MODULE_1_prismjs___default.a.languages.promql;\n            var tokens = __WEBPACK_IMPORTED_MODULE_1_prismjs___default.a.tokenize(tstring, grammar);\n            var decorations = [];\n            var startText = texts.shift();\n            var endText = startText;\n            var startOffset = 0;\n            var endOffset = 0;\n            var start = 0;\n            function processToken(token, acc) {\n                // Accumulate token types down the tree\n                var types = (acc || '') + \" \" + (token.type || '') + \" \" + (token.alias || '');\n                // Add mark for token node\n                if (typeof token === 'string' || typeof token.content === 'string') {\n                    startText = endText;\n                    startOffset = endOffset;\n                    var content = typeof token === 'string' ? token : token.content;\n                    var newlines = content.split('\\n').length - 1;\n                    var length_1 = content.length - newlines;\n                    var end = start + length_1;\n                    var available = startText.text.length - startOffset;\n                    var remaining = length_1;\n                    endOffset = startOffset + remaining;\n                    while (available < remaining) {\n                        endText = texts.shift();\n                        remaining = length_1 - available;\n                        available = endText.text.length;\n                        endOffset = remaining;\n                    }\n                    // Inject marks from up the tree (acc) as well\n                    if (typeof token !== 'string' || acc) {\n                        var range = {\n                            anchorKey: startText.key,\n                            anchorOffset: startOffset,\n                            focusKey: endText.key,\n                            focusOffset: endOffset,\n                            marks: [{ type: TOKEN_MARK, data: { types: types } }],\n                        };\n                        decorations.push(range);\n                    }\n                    start = end;\n                }\n                else if (token.content && token.content.length) {\n                    // Tokens can be nested\n                    for (var _i = 0, _a = token.content; _i < _a.length; _i++) {\n                        var subToken = _a[_i];\n                        processToken(subToken, types);\n                    }\n                }\n            }\n            // Process top-level tokens\n            for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n                var token = tokens_1[_i];\n                processToken(token);\n            }\n            return decorations;\n        },\n    };\n}\n\n\n/***/ }),\n\n/***/ 1709:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export OPERATORS */\n/* unused harmony export FUNCTIONS */\nvar OPERATORS = ['by', 'group_left', 'group_right', 'ignoring', 'on', 'offset', 'without'];\nvar AGGREGATION_OPERATORS = [\n    'sum',\n    'min',\n    'max',\n    'avg',\n    'stddev',\n    'stdvar',\n    'count',\n    'count_values',\n    'bottomk',\n    'topk',\n    'quantile',\n];\nvar FUNCTIONS = AGGREGATION_OPERATORS.concat([\n    'abs',\n    'absent',\n    'ceil',\n    'changes',\n    'clamp_max',\n    'clamp_min',\n    'count_scalar',\n    'day_of_month',\n    'day_of_week',\n    'days_in_month',\n    'delta',\n    'deriv',\n    'drop_common_labels',\n    'exp',\n    'floor',\n    'histogram_quantile',\n    'holt_winters',\n    'hour',\n    'idelta',\n    'increase',\n    'irate',\n    'label_replace',\n    'ln',\n    'log2',\n    'log10',\n    'minute',\n    'month',\n    'predict_linear',\n    'rate',\n    'resets',\n    'round',\n    'scalar',\n    'sort',\n    'sort_desc',\n    'sqrt',\n    'time',\n    'vector',\n    'year',\n    'avg_over_time',\n    'min_over_time',\n    'max_over_time',\n    'sum_over_time',\n    'count_over_time',\n    'quantile_over_time',\n    'stddev_over_time',\n    'stdvar_over_time',\n]);\nvar tokenizer = {\n    comment: {\n        pattern: /(^|[^\\n])#.*/,\n        lookbehind: true,\n    },\n    'context-aggregation': {\n        pattern: /((by|without)\\s*)\\([^)]*\\)/,\n        lookbehind: true,\n        inside: {\n            'label-key': {\n                pattern: /[^,\\s][^,]*[^,\\s]*/,\n                alias: 'attr-name',\n            },\n        },\n    },\n    'context-labels': {\n        pattern: /\\{[^}]*(?=})/,\n        inside: {\n            'label-key': {\n                pattern: /[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n                alias: 'attr-name',\n            },\n            'label-value': {\n                pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n                greedy: true,\n                alias: 'attr-value',\n            },\n        },\n    },\n    function: new RegExp(\"\\\\b(?:\" + FUNCTIONS.join('|') + \")(?=\\\\s*\\\\()\", 'i'),\n    'context-range': [\n        {\n            pattern: /\\[[^\\]]*(?=])/,\n            inside: {\n                'range-duration': {\n                    pattern: /\\b\\d+[smhdwy]\\b/i,\n                    alias: 'number',\n                },\n            },\n        },\n        {\n            pattern: /(offset\\s+)\\w+/,\n            lookbehind: true,\n            inside: {\n                'range-duration': {\n                    pattern: /\\b\\d+[smhdwy]\\b/i,\n                    alias: 'number',\n                },\n            },\n        },\n    ],\n    number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n    operator: new RegExp(\"/[-+*/=%^~]|&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\\\b(?:\" + OPERATORS.join('|') + \")\\\\b\", 'i'),\n    punctuation: /[{};()`,.]/,\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (tokenizer);\n\n\n/***/ }),\n\n/***/ 1710:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = RunnerPlugin;\nfunction RunnerPlugin(_a) {\n    var handler = _a.handler;\n    return {\n        onKeyDown: function (event) {\n            // Handle enter\n            if (handler && event.key === 'Enter' && !event.shiftKey) {\n                // Submit on Enter\n                event.preventDefault();\n                handler(event);\n                return true;\n            }\n            return undefined;\n        },\n    };\n}\n\n\n/***/ }),\n\n/***/ 1711:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = debounce;\n// Based on underscore.js debounce()\nfunction debounce(func, wait) {\n    var timeout;\n    return function () {\n        var context = this;\n        var args = arguments;\n        var later = function () {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n\n/***/ }),\n\n/***/ 1712:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RATE_RANGES; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = processLabels;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return cleanText; });\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar RATE_RANGES = ['1m', '5m', '10m', '30m', '1h'];\nfunction processLabels(labels) {\n    var values = {};\n    labels.forEach(function (l) {\n        var __name__ = l.__name__, rest = __rest(l, [\"__name__\"]);\n        Object.keys(rest).forEach(function (key) {\n            if (!values[key]) {\n                values[key] = [];\n            }\n            if (values[key].indexOf(rest[key]) === -1) {\n                values[key].push(rest[key]);\n            }\n        });\n    });\n    return { values: values, keys: Object.keys(values) };\n}\n// Strip syntax chars\nvar cleanText = function (s) { return s.replace(/[{}[\\]=\"(),!~+\\-*/^%]/g, '').trim(); };\n\n\n/***/ }),\n\n/***/ 1713:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\nfunction scrollIntoView(el) {\n    if (!el || !el.offsetParent) {\n        return;\n    }\n    var container = el.offsetParent;\n    if (el.offsetTop > container.scrollTop + container.offsetHeight || el.offsetTop < container.scrollTop) {\n        container.scrollTop = el.offsetTop - container.offsetTop;\n    }\n}\nvar TypeaheadItem = /** @class */ (function (_super) {\n    __extends(TypeaheadItem, _super);\n    function TypeaheadItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getRef = function (el) {\n            _this.el = el;\n        };\n        return _this;\n    }\n    TypeaheadItem.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.isSelected && !prevProps.isSelected) {\n            scrollIntoView(this.el);\n        }\n    };\n    TypeaheadItem.prototype.render = function () {\n        var _a = this.props, isSelected = _a.isSelected, label = _a.label, onClickItem = _a.onClickItem;\n        var className = isSelected ? 'typeahead-item typeahead-item__selected' : 'typeahead-item';\n        var onClick = function () { return onClickItem(label); };\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"li\", { ref: this.getRef, className: className, onClick: onClick }, label));\n    };\n    return TypeaheadItem;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent));\nvar TypeaheadGroup = /** @class */ (function (_super) {\n    __extends(TypeaheadGroup, _super);\n    function TypeaheadGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TypeaheadGroup.prototype.render = function () {\n        var _a = this.props, items = _a.items, label = _a.label, selected = _a.selected, onClickItem = _a.onClickItem;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"li\", { className: \"typeahead-group\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"typeahead-group__title\" }, label),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"ul\", { className: \"typeahead-group__list\" }, items.map(function (item) { return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TypeaheadItem, { key: item, onClickItem: onClickItem, isSelected: selected.indexOf(item) > -1, label: item })); }))));\n    };\n    return TypeaheadGroup;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent));\nvar Typeahead = /** @class */ (function (_super) {\n    __extends(Typeahead, _super);\n    function Typeahead() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Typeahead.prototype.render = function () {\n        var _a = this.props, groupedItems = _a.groupedItems, menuRef = _a.menuRef, selectedItems = _a.selectedItems, onClickItem = _a.onClickItem;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"ul\", { className: \"typeahead\", ref: menuRef }, groupedItems.map(function (g) { return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(TypeaheadGroup, __assign({ key: g.label, onClickItem: onClickItem, selected: selectedItems }, g))); })));\n    };\n    return Typeahead;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Typeahead);\n\n\n/***/ }),\n\n/***/ 1714:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vendor_flot_jquery_flot__ = __webpack_require__(1665);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vendor_flot_jquery_flot___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vendor_flot_jquery_flot__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vendor_flot_jquery_flot_time__ = __webpack_require__(1668);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vendor_flot_jquery_flot_time___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_vendor_flot_jquery_flot_time__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_app_core_utils_datemath__ = __webpack_require__(587);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Legend__ = __webpack_require__(1715);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\n\n\n// Copied from graph.ts\nfunction time_format(ticks, min, max) {\n    if (min && max && ticks) {\n        var range = max - min;\n        var secPerTick = range / ticks / 1000;\n        var oneDay = 86400000;\n        var oneYear = 31536000000;\n        if (secPerTick <= 45) {\n            return '%H:%M:%S';\n        }\n        if (secPerTick <= 7200 || range <= oneDay) {\n            return '%H:%M';\n        }\n        if (secPerTick <= 80000) {\n            return '%m/%d %H:%M';\n        }\n        if (secPerTick <= 2419200 || range <= oneYear) {\n            return '%m/%d';\n        }\n        return '%Y-%m';\n    }\n    return '%H:%M';\n}\nvar FLOT_OPTIONS = {\n    legend: {\n        show: false,\n    },\n    series: {\n        lines: {\n            linewidth: 1,\n            zero: false,\n        },\n        shadowSize: 0,\n    },\n    grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        // hoverable: true,\n        clickable: true,\n        color: '#a1a1a1',\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n    },\n};\nvar Graph = /** @class */ (function (_super) {\n    __extends(Graph, _super);\n    function Graph() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Graph.prototype.componentDidMount = function () {\n        this.draw();\n    };\n    Graph.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.data !== this.props.data ||\n            prevProps.options !== this.props.options ||\n            prevProps.split !== this.props.split ||\n            prevProps.height !== this.props.height) {\n            this.draw();\n        }\n    };\n    Graph.prototype.draw = function () {\n        var _a = this.props, data = _a.data, userOptions = _a.options;\n        if (!data) {\n            return;\n        }\n        var series = data.map(function (ts) { return ({\n            color: ts.color,\n            label: ts.label,\n            data: ts.getFlotPairs('null'),\n        }); });\n        var $el = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#\" + this.props.id);\n        var ticks = $el.width() / 100;\n        var _b = userOptions.range, from = _b.from, to = _b.to;\n        if (!__WEBPACK_IMPORTED_MODULE_2_moment___default.a.isMoment(from)) {\n            from = __WEBPACK_IMPORTED_MODULE_5_app_core_utils_datemath__[\"parse\"](from, false);\n        }\n        if (!__WEBPACK_IMPORTED_MODULE_2_moment___default.a.isMoment(to)) {\n            to = __WEBPACK_IMPORTED_MODULE_5_app_core_utils_datemath__[\"parse\"](to, true);\n        }\n        var min = from.valueOf();\n        var max = to.valueOf();\n        var dynamicOptions = {\n            xaxis: {\n                mode: 'time',\n                min: min,\n                max: max,\n                label: 'Datetime',\n                ticks: ticks,\n                timeformat: time_format(ticks, min, max),\n            },\n        };\n        var options = __assign({}, FLOT_OPTIONS, dynamicOptions, userOptions);\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.plot($el, series, options);\n    };\n    Graph.prototype.render = function () {\n        var _a = this.props, data = _a.data, height = _a.height;\n        return (__WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", { className: \"panel-container\" },\n            __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\"div\", { id: this.props.id, className: \"explore-graph\", style: { height: height } }),\n            __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__Legend__[\"a\" /* default */], { data: data })));\n    };\n    return Graph;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Graph);\n\n\n/***/ }),\n\n/***/ 1715:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar LegendItem = function (_a) {\n    var series = _a.series;\n    return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"graph-legend-series\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"graph-legend-icon\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-minus pointer\", style: { color: series.color } })),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\", { className: \"graph-legend-alias pointer\" }, series.alias)));\n};\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Legend.prototype.render = function () {\n        var _a = this.props, _b = _a.className, className = _b === void 0 ? '' : _b, data = _a.data;\n        var items = data || [];\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: className + \" graph-legend ps\" }, items.map(function (series) { return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LegendItem, { key: series.id, series: series }); })));\n    };\n    return Legend;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Legend);\n\n\n/***/ }),\n\n/***/ 1716:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n// import TableModel from 'app/core/table_model';\nvar EMPTY_TABLE = {\n    columns: [],\n    rows: [],\n};\nvar Table = /** @class */ (function (_super) {\n    __extends(Table, _super);\n    function Table() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Table.prototype.render = function () {\n        var _a = this.props, _b = _a.className, className = _b === void 0 ? '' : _b, data = _a.data;\n        var tableModel = data || EMPTY_TABLE;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"table\", { className: className + \" filter-table\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"thead\", null,\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\", null, tableModel.columns.map(function (col) { return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"th\", { key: col.text }, col.text); }))),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tbody\", null, tableModel.rows.map(function (row, i) { return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\", { key: i }, row.map(function (content, j) { return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\", { key: j }, content); })); }))));\n    };\n    return Table;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"a\"] = (Table);\n\n\n/***/ }),\n\n/***/ 1717:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DEFAULT_RANGE; });\n/* unused harmony export parseTime */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__ = __webpack_require__(587);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__ = __webpack_require__(592);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';\nvar DEFAULT_RANGE = {\n    from: 'now-6h',\n    to: 'now',\n};\nfunction parseTime(value, isUtc, asString) {\n    if (isUtc === void 0) { isUtc = false; }\n    if (asString === void 0) { asString = false; }\n    if (value.indexOf('now') !== -1) {\n        return value;\n    }\n    if (!isNaN(value)) {\n        var epoch = parseInt(value);\n        var m = isUtc ? __WEBPACK_IMPORTED_MODULE_1_moment___default.a.utc(epoch) : __WEBPACK_IMPORTED_MODULE_1_moment___default()(epoch);\n        return asString ? m.format(DATE_FORMAT) : m;\n    }\n    return undefined;\n}\nvar TimePicker = /** @class */ (function (_super) {\n    __extends(TimePicker, _super);\n    function TimePicker(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleChangeFrom = function (e) {\n            _this.setState({\n                fromRaw: e.target.value,\n            });\n        };\n        _this.handleChangeTo = function (e) {\n            _this.setState({\n                toRaw: e.target.value,\n            });\n        };\n        _this.handleClickApply = function () {\n            var onChangeTime = _this.props.onChangeTime;\n            var _a = _this.state, toRaw = _a.toRaw, fromRaw = _a.fromRaw;\n            var range = {\n                from: __WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__[\"parse\"](fromRaw, false),\n                to: __WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__[\"parse\"](toRaw, true),\n            };\n            var rangeString = __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__[\"b\" /* describeTimeRange */](range);\n            _this.setState({\n                isOpen: false,\n                rangeString: rangeString,\n            }, function () {\n                if (onChangeTime) {\n                    onChangeTime(range);\n                }\n            });\n        };\n        _this.handleClickLeft = function () { return _this.move(-1); };\n        _this.handleClickPicker = function () {\n            _this.setState(function (state) { return ({\n                isOpen: !state.isOpen,\n            }); });\n        };\n        _this.handleClickRight = function () { return _this.move(1); };\n        _this.handleClickRefresh = function () { };\n        _this.handleClickRelativeOption = function (range) {\n            var onChangeTime = _this.props.onChangeTime;\n            var rangeString = __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__[\"b\" /* describeTimeRange */](range);\n            _this.setState({\n                toRaw: range.to,\n                fromRaw: range.from,\n                isOpen: false,\n                rangeString: rangeString,\n            }, function () {\n                if (onChangeTime) {\n                    onChangeTime(range);\n                }\n            });\n        };\n        _this.dropdownRef = function (el) {\n            _this.dropdownEl = el;\n        };\n        var fromRaw = props.range ? props.range.from : DEFAULT_RANGE.from;\n        var toRaw = props.range ? props.range.to : DEFAULT_RANGE.to;\n        var range = {\n            from: parseTime(fromRaw),\n            to: parseTime(toRaw),\n        };\n        _this.state = {\n            fromRaw: parseTime(fromRaw, props.isUtc, true),\n            isOpen: props.isOpen,\n            isUtc: props.isUtc,\n            rangeString: __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__[\"b\" /* describeTimeRange */](range),\n            refreshInterval: '',\n            toRaw: parseTime(toRaw, props.isUtc, true),\n        };\n        return _this;\n    }\n    TimePicker.prototype.move = function (direction) {\n        var onChangeTime = this.props.onChangeTime;\n        var _a = this.state, fromRaw = _a.fromRaw, toRaw = _a.toRaw;\n        var range = {\n            from: __WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__[\"parse\"](fromRaw, false),\n            to: __WEBPACK_IMPORTED_MODULE_2_app_core_utils_datemath__[\"parse\"](toRaw, true),\n        };\n        var timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\n        var to, from;\n        if (direction === -1) {\n            to = range.to.valueOf() - timespan;\n            from = range.from.valueOf() - timespan;\n        }\n        else if (direction === 1) {\n            to = range.to.valueOf() + timespan;\n            from = range.from.valueOf() + timespan;\n            if (to > Date.now() && range.to < Date.now()) {\n                to = Date.now();\n                from = range.from.valueOf();\n            }\n        }\n        else {\n            to = range.to.valueOf();\n            from = range.from.valueOf();\n        }\n        var rangeString = __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__[\"b\" /* describeTimeRange */](range);\n        // No need to convert to UTC again\n        to = __WEBPACK_IMPORTED_MODULE_1_moment___default()(to);\n        from = __WEBPACK_IMPORTED_MODULE_1_moment___default()(from);\n        this.setState({\n            rangeString: rangeString,\n            fromRaw: from.format(DATE_FORMAT),\n            toRaw: to.format(DATE_FORMAT),\n        }, function () {\n            onChangeTime({ to: to, from: from });\n        });\n    };\n    TimePicker.prototype.getTimeOptions = function () {\n        return __WEBPACK_IMPORTED_MODULE_3_app_core_utils_rangeutil__[\"c\" /* getRelativeTimesList */]({}, this.state.rangeString);\n    };\n    TimePicker.prototype.renderDropdown = function () {\n        var _this = this;\n        var _a = this.state, fromRaw = _a.fromRaw, isOpen = _a.isOpen, toRaw = _a.toRaw;\n        if (!isOpen) {\n            return null;\n        }\n        var timeOptions = this.getTimeOptions();\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { ref: this.dropdownRef, className: \"gf-timepicker-dropdown\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-timepicker-absolute-section\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\", { className: \"section-heading\" }, \"Custom range\"),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"label\", { className: \"small\" }, \"From:\"),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-form-inline\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-form max-width-28\" },\n                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"input\", { type: \"text\", className: \"gf-form-input input-large timepicker-from\", value: fromRaw, onChange: this.handleChangeFrom }))),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"label\", { className: \"small\" }, \"To:\"),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-form-inline\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-form max-width-28\" },\n                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"input\", { type: \"text\", className: \"gf-form-input input-large timepicker-to\", value: toRaw, onChange: this.handleChangeTo }))),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-form\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn gf-form-btn btn-secondary\", onClick: this.handleClickApply }, \"Apply\"))),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"gf-timepicker-relative-section\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\", { className: \"section-heading\" }, \"Quick ranges\"),\n                Object.keys(timeOptions).map(function (section) {\n                    var group = timeOptions[section];\n                    return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"ul\", { key: section }, group.map(function (option) { return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"li\", { className: option.active ? 'active' : '', key: option.display },\n                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\", { onClick: function () { return _this.handleClickRelativeOption(option); } }, option.display))); })));\n                }))));\n    };\n    TimePicker.prototype.render = function () {\n        var _a = this.state, isUtc = _a.isUtc, rangeString = _a.rangeString, refreshInterval = _a.refreshInterval;\n        return (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"timepicker\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { className: \"navbar-buttons\" },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button navbar-button--tight timepicker-left\", onClick: this.handleClickLeft },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-chevron-left\" })),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button gf-timepicker-nav-btn\", onClick: this.handleClickPicker },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-clock-o\" }),\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\", { className: \"timepicker-rangestring\" }, rangeString),\n                    isUtc ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\", { className: \"gf-timepicker-utc\" }, \"UTC\") : null,\n                    refreshInterval ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\", { className: \"text-warning\" },\n                        \"\\u00A0 Refresh every \",\n                        refreshInterval) : null),\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"button\", { className: \"btn navbar-button navbar-button--tight timepicker-right\", onClick: this.handleClickRight },\n                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"i\", { className: \"fa fa-chevron-right\" }))),\n            this.renderDropdown()));\n    };\n    return TimePicker;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]));\n/* harmony default export */ __webpack_exports__[\"b\"] = (TimePicker);\n\n\n/***/ }),\n\n/***/ 1718:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = buildQueryOptions;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = generateQueryKey;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = ensureQueries;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = hasQuery;\nfunction buildQueryOptions(_a) {\n    var format = _a.format, interval = _a.interval, instant = _a.instant, range = _a.range, queries = _a.queries;\n    return {\n        interval: interval,\n        range: range,\n        targets: queries.map(function (expr) { return ({\n            expr: expr,\n            format: format,\n            instant: instant,\n        }); }),\n    };\n}\nfunction generateQueryKey(index) {\n    if (index === void 0) { index = 0; }\n    return \"Q-\" + Date.now() + \"-\" + Math.random() + \"-\" + index;\n}\nfunction ensureQueries(queries) {\n    if (queries && typeof queries === 'object' && queries.length > 0 && typeof queries[0] === 'string') {\n        return queries.map(function (query, i) { return ({ key: generateQueryKey(i), query: query }); });\n    }\n    return [{ key: generateQueryKey(), query: '' }];\n}\nfunction hasQuery(queries) {\n    return queries.some(function (q) { return q.query; });\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.dbd4626b9332282e4156.js","import React, { PureComponent } from 'react';\n\nimport Explore from './Explore';\n\nexport default class Wrapper extends PureComponent<any, any> {\n  state = {\n    initialState: null,\n    split: false,\n  };\n\n  handleChangeSplit = (split, initialState) => {\n    this.setState({ split, initialState });\n  };\n\n  render() {\n    // State overrides for props from first Explore\n    const { initialState, split } = this.state;\n    return (\n      <div className=\"explore-wrapper\">\n        <Explore {...this.props} position=\"left\" onChangeSplit={this.handleChangeSplit} split={split} />\n        {split ? (\n          <Explore\n            {...this.props}\n            initialState={initialState}\n            onChangeSplit={this.handleChangeSplit}\n            position=\"right\"\n            split={split}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Wrapper.tsx","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t\tthis._textSizeCache = window.flotTextSizeCache = window.flotTextSizeCache || {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text flot-temp-elem'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n      info = styleCache[text] = { element: element, positions: [] };\n\n      var size = this._textSizeCache[text];\n\t\t\tif (size) {\n        info.width = size.width;\n        info.height = size.height;\n\t\t\t} else {\n        info.width = element.outerWidth(true);\n        info.height = element.outerHeight(true);\n        this._textSizeCache[text] = { width: info.width, height: info.height };\n\t\t\t}\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    eventSectionHeight: 0, // space for event section\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            processRange: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n\n                    if (insertSteps && k > 0 && (!nullify || points[k - ps] != null)) {\n                        // copy the point to make room for a middle point\n                        for (m = 0; m < ps; ++m)\n                            points[k + ps + m] = points[k + m];\n\n                        // middle point has same y\n                        points[k + 1] = points[k - ps + 1] || 0;\n\n                        // if series has null values, let's give the last !null value a nice step\n                        if(nullify)\n                        \tpoints[k] = p[0];\n\n                        // we've added a point, better reflect that\n                        k += ps;\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n\n                // grafana\n                if (s.transform === 'negative-Y') {\n                  for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                      val = points[j + 1];\n                      points[j + 1] = -val;\n                  }\n                }\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.find(\".flot-temp-elem\").remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                /// Grafana fix, add +1 to label width\n                labelWidth = Math.max(labelWidth, info.width + 1);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                eventSectionPadding = options.grid.eventSectionHeight,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                // Add space for event section\n                lh += padding;\n                lh += eventSectionPadding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.box.eventSectionPadding = eventSectionPadding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            executeHooks(hooks.processRange, []);\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                var snaped = false;\n                for (var i = 0; i < 2; i++) {\n                    $.each(allocatedAxes, function (_, axis) {\n                        // make the ticks\n                        setupTickGeneration(axis);\n                        setTicks(axis);\n                        snaped = snapRangeToTicks(axis, axis.ticks) || snaped;\n                        // find labelWidth/Height for axis\n                        measureTickLabels(axis);\n                    });\n\n                    if (snaped && hooks.processRange.length > 0) {\n                        executeHooks(hooks.processRange, []);\n                        snaped = false;\n                    } else {\n                        break;\n                    }\n                }\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // Grafana fix: wide Y min and max using increased wideFactor\n                // when all series values are the same\n                var wideFactor = 0.25;\n                var widen = Math.abs(max == 0 ? 1 : max * wideFactor);\n\n                if (opts.min == null) {\n                  min -= widen;\n                }\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null) {\n                  max += widen;\n                }\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n            // grafana addition\n            axis.scaledDecimals = axis.tickDecimals - Math.floor(Math.log(axis.tickSize) / Math.LN10);\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            var changed = false;\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null) {\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                    changed = true;\n                }\n                if (axis.options.max == null && ticks.length > 1) {\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n                    changed = true;\n                }\n            }\n            return changed;\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);\n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding + box.eventSectionPadding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very\n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be\n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n          if (plot.isSelecting) {\n            return;\n          }\n\n          triggerClickHoverEvent(\"plotclick\", e, function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            // Add ctrlKey and metaKey to event\n            pos.ctrlKey = event.ctrlKey;\n            pos.metaKey = event.metaKey;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/vendor/flot/jquery.flot.js\n// module id = 1665\n// module chunks = 0 1","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate(), \"\"); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1, \"\"); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"],\n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"],\n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/vendor/flot/jquery.flot.time.js\n// module id = 1668\n// module chunks = 0 1","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport colors from 'app/core/utils/colors';\nimport TimeSeries from 'app/core/time_series2';\n\nimport ElapsedTime from './ElapsedTime';\nimport QueryRows from './QueryRows';\nimport Graph from './Graph';\nimport Table from './Table';\nimport TimePicker, { DEFAULT_RANGE } from './TimePicker';\nimport { DatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { buildQueryOptions, ensureQueries, generateQueryKey, hasQuery } from './utils/query';\nimport { decodePathComponent } from 'app/core/utils/location_util';\n\nfunction makeTimeSeriesList(dataList, options) {\n  return dataList.map((seriesData, index) => {\n    const datapoints = seriesData.datapoints || [];\n    const alias = seriesData.target;\n    const colorIndex = index % colors.length;\n    const color = colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints,\n      alias,\n      color,\n      unit: seriesData.unit,\n    });\n\n    return series;\n  });\n}\n\nfunction parseInitialState(initial) {\n  try {\n    const parsed = JSON.parse(decodePathComponent(initial));\n    return {\n      queries: parsed.queries.map(q => q.query),\n      range: parsed.range,\n    };\n  } catch (e) {\n    console.error(e);\n    return { queries: [], range: DEFAULT_RANGE };\n  }\n}\n\ninterface IExploreState {\n  datasource: any;\n  datasourceError: any;\n  datasourceLoading: any;\n  graphResult: any;\n  latency: number;\n  loading: any;\n  queries: any;\n  queryError: any;\n  range: any;\n  requestOptions: any;\n  showingGraph: boolean;\n  showingTable: boolean;\n  tableResult: any;\n}\n\n// @observer\nexport class Explore extends React.Component<any, IExploreState> {\n  datasourceSrv: DatasourceSrv;\n\n  constructor(props) {\n    super(props);\n    const { range, queries } = parseInitialState(props.routeParams.initial);\n    this.state = {\n      datasource: null,\n      datasourceError: null,\n      datasourceLoading: true,\n      graphResult: null,\n      latency: 0,\n      loading: false,\n      queries: ensureQueries(queries),\n      queryError: null,\n      range: range || { ...DEFAULT_RANGE },\n      requestOptions: null,\n      showingGraph: true,\n      showingTable: true,\n      tableResult: null,\n      ...props.initialState,\n    };\n  }\n\n  async componentDidMount() {\n    const datasource = await this.props.datasourceSrv.get();\n    const testResult = await datasource.testDatasource();\n    if (testResult.status === 'success') {\n      this.setState({ datasource, datasourceError: null, datasourceLoading: false }, () => this.handleSubmit());\n    } else {\n      this.setState({ datasource: null, datasourceError: testResult.message, datasourceLoading: false });\n    }\n  }\n\n  componentDidCatch(error) {\n    console.error(error);\n  }\n\n  handleAddQueryRow = index => {\n    const { queries } = this.state;\n    const nextQueries = [\n      ...queries.slice(0, index + 1),\n      { query: '', key: generateQueryKey() },\n      ...queries.slice(index + 1),\n    ];\n    this.setState({ queries: nextQueries });\n  };\n\n  handleChangeQuery = (query, index) => {\n    const { queries } = this.state;\n    const nextQuery = {\n      ...queries[index],\n      query,\n    };\n    const nextQueries = [...queries];\n    nextQueries[index] = nextQuery;\n    this.setState({ queries: nextQueries });\n  };\n\n  handleChangeTime = nextRange => {\n    const range = {\n      from: nextRange.from,\n      to: nextRange.to,\n    };\n    this.setState({ range }, () => this.handleSubmit());\n  };\n\n  handleClickCloseSplit = () => {\n    const { onChangeSplit } = this.props;\n    if (onChangeSplit) {\n      onChangeSplit(false);\n    }\n  };\n\n  handleClickGraphButton = () => {\n    this.setState(state => ({ showingGraph: !state.showingGraph }));\n  };\n\n  handleClickSplit = () => {\n    const { onChangeSplit } = this.props;\n    if (onChangeSplit) {\n      onChangeSplit(true, this.state);\n    }\n  };\n\n  handleClickTableButton = () => {\n    this.setState(state => ({ showingTable: !state.showingTable }));\n  };\n\n  handleRemoveQueryRow = index => {\n    const { queries } = this.state;\n    if (queries.length <= 1) {\n      return;\n    }\n    const nextQueries = [...queries.slice(0, index), ...queries.slice(index + 1)];\n    this.setState({ queries: nextQueries }, () => this.handleSubmit());\n  };\n\n  handleSubmit = () => {\n    const { showingGraph, showingTable } = this.state;\n    if (showingTable) {\n      this.runTableQuery();\n    }\n    if (showingGraph) {\n      this.runGraphQuery();\n    }\n  };\n\n  async runGraphQuery() {\n    const { datasource, queries, range } = this.state;\n    if (!hasQuery(queries)) {\n      return;\n    }\n    this.setState({ latency: 0, loading: true, graphResult: null, queryError: null });\n    const now = Date.now();\n    const options = buildQueryOptions({\n      format: 'time_series',\n      interval: datasource.interval,\n      instant: false,\n      range,\n      queries: queries.map(q => q.query),\n    });\n    try {\n      const res = await datasource.query(options);\n      const result = makeTimeSeriesList(res.data, options);\n      const latency = Date.now() - now;\n      this.setState({ latency, loading: false, graphResult: result, requestOptions: options });\n    } catch (response) {\n      console.error(response);\n      const queryError = response.data ? response.data.error : response;\n      this.setState({ loading: false, queryError });\n    }\n  }\n\n  async runTableQuery() {\n    const { datasource, queries, range } = this.state;\n    if (!hasQuery(queries)) {\n      return;\n    }\n    this.setState({ latency: 0, loading: true, queryError: null, tableResult: null });\n    const now = Date.now();\n    const options = buildQueryOptions({\n      format: 'table',\n      interval: datasource.interval,\n      instant: true,\n      range,\n      queries: queries.map(q => q.query),\n    });\n    try {\n      const res = await datasource.query(options);\n      const tableModel = res.data[0];\n      const latency = Date.now() - now;\n      this.setState({ latency, loading: false, tableResult: tableModel, requestOptions: options });\n    } catch (response) {\n      console.error(response);\n      const queryError = response.data ? response.data.error : response;\n      this.setState({ loading: false, queryError });\n    }\n  }\n\n  request = url => {\n    const { datasource } = this.state;\n    return datasource.metadataRequest(url);\n  };\n\n  render() {\n    const { position, split } = this.props;\n    const {\n      datasource,\n      datasourceError,\n      datasourceLoading,\n      graphResult,\n      latency,\n      loading,\n      queries,\n      queryError,\n      range,\n      requestOptions,\n      showingGraph,\n      showingTable,\n      tableResult,\n    } = this.state;\n    const showingBoth = showingGraph && showingTable;\n    const graphHeight = showingBoth ? '200px' : '400px';\n    const graphButtonActive = showingBoth || showingGraph ? 'active' : '';\n    const tableButtonActive = showingBoth || showingTable ? 'active' : '';\n    const exploreClass = split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass}>\n        <div className=\"navbar\">\n          {position === 'left' ? (\n            <div>\n              <a className=\"navbar-page-btn\">\n                <i className=\"fa fa-rocket\" />\n                Explore\n              </a>\n            </div>\n          ) : (\n            <div className=\"navbar-buttons explore-first-button\">\n              <button className=\"btn navbar-button\" onClick={this.handleClickCloseSplit}>\n                Close Split\n              </button>\n            </div>\n          )}\n          <div className=\"navbar__spacer\" />\n          {position === 'left' && !split ? (\n            <div className=\"navbar-buttons\">\n              <button className=\"btn navbar-button\" onClick={this.handleClickSplit}>\n                Split\n              </button>\n            </div>\n          ) : null}\n          <div className=\"navbar-buttons\">\n            <button className={`btn navbar-button ${graphButtonActive}`} onClick={this.handleClickGraphButton}>\n              Graph\n            </button>\n            <button className={`btn navbar-button ${tableButtonActive}`} onClick={this.handleClickTableButton}>\n              Table\n            </button>\n          </div>\n          <TimePicker range={range} onChangeTime={this.handleChangeTime} />\n          <div className=\"navbar-buttons relative\">\n            <button className=\"btn navbar-button--primary\" onClick={this.handleSubmit}>\n              Run Query <i className=\"fa fa-level-down run-icon\" />\n            </button>\n            {loading || latency ? <ElapsedTime time={latency} className=\"text-info\" /> : null}\n          </div>\n        </div>\n\n        {datasourceLoading ? <div className=\"explore-container\">Loading datasource...</div> : null}\n\n        {datasourceError ? (\n          <div className=\"explore-container\" title={datasourceError}>\n            Error connecting to datasource.\n          </div>\n        ) : null}\n\n        {datasource ? (\n          <div className=\"explore-container\">\n            <QueryRows\n              queries={queries}\n              request={this.request}\n              onAddQueryRow={this.handleAddQueryRow}\n              onChangeQuery={this.handleChangeQuery}\n              onExecuteQuery={this.handleSubmit}\n              onRemoveQueryRow={this.handleRemoveQueryRow}\n            />\n            {queryError ? <div className=\"text-warning m-a-2\">{queryError}</div> : null}\n            <main className=\"m-t-2\">\n              {showingGraph ? (\n                <Graph\n                  data={graphResult}\n                  id={`explore-graph-${position}`}\n                  options={requestOptions}\n                  height={graphHeight}\n                  split={split}\n                />\n              ) : null}\n              {showingTable ? <Table data={tableResult} className=\"m-t-3\" /> : null}\n            </main>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Explore);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Explore.tsx","import React, { PureComponent } from 'react';\n\nconst INTERVAL = 150;\n\nexport default class ElapsedTime extends PureComponent<any, any> {\n  offset: number;\n  timer: number;\n\n  state = {\n    elapsed: 0,\n  };\n\n  start() {\n    this.offset = Date.now();\n    this.timer = window.setInterval(this.tick, INTERVAL);\n  }\n\n  tick = () => {\n    const jetzt = Date.now();\n    const elapsed = jetzt - this.offset;\n    this.setState({ elapsed });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.time) {\n      clearInterval(this.timer);\n    } else if (this.props.time) {\n      this.start();\n    }\n  }\n\n  componentDidMount() {\n    this.start();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { elapsed } = this.state;\n    const { className, time } = this.props;\n    const value = (time || elapsed) / 1000;\n    return <span className={`elapsed-time ${className}`}>{value.toFixed(1)}s</span>;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/ElapsedTime.tsx","import React, { PureComponent } from 'react';\n\nimport QueryField from './QueryField';\n\nclass QueryRow extends PureComponent<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edited: false,\n      query: props.query || '',\n    };\n  }\n\n  handleChangeQuery = value => {\n    const { index, onChangeQuery } = this.props;\n    const { query } = this.state;\n    const edited = query !== value;\n    this.setState({ edited, query: value });\n    if (onChangeQuery) {\n      onChangeQuery(value, index);\n    }\n  };\n\n  handleClickAddButton = () => {\n    const { index, onAddQueryRow } = this.props;\n    if (onAddQueryRow) {\n      onAddQueryRow(index);\n    }\n  };\n\n  handleClickRemoveButton = () => {\n    const { index, onRemoveQueryRow } = this.props;\n    if (onRemoveQueryRow) {\n      onRemoveQueryRow(index);\n    }\n  };\n\n  handlePressEnter = () => {\n    const { onExecuteQuery } = this.props;\n    if (onExecuteQuery) {\n      onExecuteQuery();\n    }\n  };\n\n  render() {\n    const { request } = this.props;\n    const { edited, query } = this.state;\n    return (\n      <div className=\"query-row\">\n        <div className=\"query-row-tools\">\n          <button className=\"btn navbar-button navbar-button--tight\" onClick={this.handleClickAddButton}>\n            <i className=\"fa fa-plus\" />\n          </button>\n          <button className=\"btn navbar-button navbar-button--tight\" onClick={this.handleClickRemoveButton}>\n            <i className=\"fa fa-minus\" />\n          </button>\n        </div>\n        <div className=\"query-field-wrapper\">\n          <QueryField\n            initialQuery={edited ? null : query}\n            onPressEnter={this.handlePressEnter}\n            onQueryChange={this.handleChangeQuery}\n            placeholder=\"Enter a PromQL query\"\n            request={request}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class QueryRows extends PureComponent<any, any> {\n  render() {\n    const { className = '', queries, ...handlers } = this.props;\n    return (\n      <div className={className}>\n        {queries.map((q, index) => <QueryRow key={q.key} index={index} query={q.query} {...handlers} />)}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/QueryRows.tsx","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Value } from 'slate';\nimport { Editor } from 'slate-react';\nimport Plain from 'slate-plain-serializer';\n\n// dom also includes Element polyfills\nimport { getNextCharacter, getPreviousCousin } from './utils/dom';\nimport BracesPlugin from './slate-plugins/braces';\nimport ClearPlugin from './slate-plugins/clear';\nimport NewlinePlugin from './slate-plugins/newline';\nimport PluginPrism, { configurePrismMetricsTokens } from './slate-plugins/prism/index';\nimport RunnerPlugin from './slate-plugins/runner';\nimport debounce from './utils/debounce';\nimport { processLabels, RATE_RANGES, cleanText } from './utils/prometheus';\n\nimport Typeahead from './Typeahead';\n\nconst EMPTY_METRIC = '';\nconst TYPEAHEAD_DEBOUNCE = 300;\n\nfunction flattenSuggestions(s) {\n  return s ? s.reduce((acc, g) => acc.concat(g.items), []) : [];\n}\n\nconst getInitialValue = query =>\n  Value.fromJSON({\n    document: {\n      nodes: [\n        {\n          object: 'block',\n          type: 'paragraph',\n          nodes: [\n            {\n              object: 'text',\n              leaves: [\n                {\n                  text: query,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  });\n\nclass Portal extends React.Component {\n  node: any;\n  constructor(props) {\n    super(props);\n    this.node = document.createElement('div');\n    this.node.classList.add('explore-typeahead', `explore-typeahead-${props.index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.node);\n  }\n}\n\nclass QueryField extends React.Component<any, any> {\n  menuEl: any;\n  plugins: any;\n  resetTimer: any;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.plugins = [\n      BracesPlugin(),\n      ClearPlugin(),\n      RunnerPlugin({ handler: props.onPressEnter }),\n      NewlinePlugin(),\n      PluginPrism(),\n    ];\n\n    this.state = {\n      labelKeys: {},\n      labelValues: {},\n      metrics: props.metrics || [],\n      suggestions: [],\n      typeaheadIndex: 0,\n      typeaheadPrefix: '',\n      value: getInitialValue(props.initialQuery || ''),\n    };\n  }\n\n  componentDidMount() {\n    this.updateMenu();\n\n    if (this.props.metrics === undefined) {\n      this.fetchMetricNames();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.resetTimer);\n  }\n\n  componentDidUpdate() {\n    this.updateMenu();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.metrics && nextProps.metrics !== this.props.metrics) {\n      this.setState({ metrics: nextProps.metrics }, this.onMetricsReceived);\n    }\n    // initialQuery is null in case the user typed\n    if (nextProps.initialQuery !== null && nextProps.initialQuery !== this.props.initialQuery) {\n      this.setState({ value: getInitialValue(nextProps.initialQuery) });\n    }\n  }\n\n  onChange = ({ value }) => {\n    const changed = value.document !== this.state.value.document;\n    this.setState({ value }, () => {\n      if (changed) {\n        this.handleChangeQuery();\n      }\n    });\n\n    window.requestAnimationFrame(this.handleTypeahead);\n  };\n\n  onMetricsReceived = () => {\n    if (!this.state.metrics) {\n      return;\n    }\n    configurePrismMetricsTokens(this.state.metrics);\n    // Trigger re-render\n    window.requestAnimationFrame(() => {\n      // Bogus edit to trigger highlighting\n      const change = this.state.value\n        .change()\n        .insertText(' ')\n        .deleteBackward(1);\n      this.onChange(change);\n    });\n  };\n\n  request = url => {\n    if (this.props.request) {\n      return this.props.request(url);\n    }\n    return fetch(url);\n  };\n\n  handleChangeQuery = () => {\n    // Send text change to parent\n    const { onQueryChange } = this.props;\n    if (onQueryChange) {\n      onQueryChange(Plain.serialize(this.state.value));\n    }\n  };\n\n  handleTypeahead = debounce(() => {\n    const selection = window.getSelection();\n    if (selection.anchorNode) {\n      const wrapperNode = selection.anchorNode.parentElement;\n      const editorNode = wrapperNode.closest('.query-field');\n      if (!editorNode || this.state.value.isBlurred) {\n        // Not inside this editor\n        return;\n      }\n\n      const range = selection.getRangeAt(0);\n      const text = selection.anchorNode.textContent;\n      const offset = range.startOffset;\n      const prefix = cleanText(text.substr(0, offset));\n\n      // Determine candidates by context\n      const suggestionGroups = [];\n      const wrapperClasses = wrapperNode.classList;\n      let typeaheadContext = null;\n\n      // Take first metric as lucky guess\n      const metricNode = editorNode.querySelector('.metric');\n\n      if (wrapperClasses.contains('context-range')) {\n        // Rate ranges\n        typeaheadContext = 'context-range';\n        suggestionGroups.push({\n          label: 'Range vector',\n          items: [...RATE_RANGES],\n        });\n      } else if (wrapperClasses.contains('context-labels') && metricNode) {\n        const metric = metricNode.textContent;\n        const labelKeys = this.state.labelKeys[metric];\n        if (labelKeys) {\n          if ((text && text.startsWith('=')) || wrapperClasses.contains('attr-value')) {\n            // Label values\n            const labelKeyNode = getPreviousCousin(wrapperNode, '.attr-name');\n            if (labelKeyNode) {\n              const labelKey = labelKeyNode.textContent;\n              const labelValues = this.state.labelValues[metric][labelKey];\n              typeaheadContext = 'context-label-values';\n              suggestionGroups.push({\n                label: 'Label values',\n                items: labelValues,\n              });\n            }\n          } else {\n            // Label keys\n            typeaheadContext = 'context-labels';\n            suggestionGroups.push({ label: 'Labels', items: labelKeys });\n          }\n        } else {\n          this.fetchMetricLabels(metric);\n        }\n      } else if (wrapperClasses.contains('context-labels') && !metricNode) {\n        // Empty name queries\n        const defaultKeys = ['job', 'instance'];\n        // Munge all keys that we have seen together\n        const labelKeys = Object.keys(this.state.labelKeys).reduce((acc, metric) => {\n          return acc.concat(this.state.labelKeys[metric].filter(key => acc.indexOf(key) === -1));\n        }, defaultKeys);\n        if ((text && text.startsWith('=')) || wrapperClasses.contains('attr-value')) {\n          // Label values\n          const labelKeyNode = getPreviousCousin(wrapperNode, '.attr-name');\n          if (labelKeyNode) {\n            const labelKey = labelKeyNode.textContent;\n            if (this.state.labelValues[EMPTY_METRIC]) {\n              const labelValues = this.state.labelValues[EMPTY_METRIC][labelKey];\n              typeaheadContext = 'context-label-values';\n              suggestionGroups.push({\n                label: 'Label values',\n                items: labelValues,\n              });\n            } else {\n              // Can only query label values for now (API to query keys is under development)\n              this.fetchLabelValues(labelKey);\n            }\n          }\n        } else {\n          // Label keys\n          typeaheadContext = 'context-labels';\n          suggestionGroups.push({ label: 'Labels', items: labelKeys });\n        }\n      } else if (metricNode && wrapperClasses.contains('context-aggregation')) {\n        typeaheadContext = 'context-aggregation';\n        const metric = metricNode.textContent;\n        const labelKeys = this.state.labelKeys[metric];\n        if (labelKeys) {\n          suggestionGroups.push({ label: 'Labels', items: labelKeys });\n        } else {\n          this.fetchMetricLabels(metric);\n        }\n      } else if (\n        (this.state.metrics && ((prefix && !wrapperClasses.contains('token')) || text.match(/[+\\-*/^%]/))) ||\n        wrapperClasses.contains('context-function')\n      ) {\n        // Need prefix for metrics\n        typeaheadContext = 'context-metrics';\n        suggestionGroups.push({\n          label: 'Metrics',\n          items: this.state.metrics,\n        });\n      }\n\n      let results = 0;\n      const filteredSuggestions = suggestionGroups.map(group => {\n        if (group.items) {\n          group.items = group.items.filter(c => c.length !== prefix.length && c.indexOf(prefix) > -1);\n          results += group.items.length;\n        }\n        return group;\n      });\n\n      console.log('handleTypeahead', selection.anchorNode, wrapperClasses, text, offset, prefix, typeaheadContext);\n\n      this.setState({\n        typeaheadPrefix: prefix,\n        typeaheadContext,\n        typeaheadText: text,\n        suggestions: results > 0 ? filteredSuggestions : [],\n      });\n    }\n  }, TYPEAHEAD_DEBOUNCE);\n\n  applyTypeahead(change, suggestion) {\n    const { typeaheadPrefix, typeaheadContext, typeaheadText } = this.state;\n\n    // Modify suggestion based on context\n    switch (typeaheadContext) {\n      case 'context-labels': {\n        const nextChar = getNextCharacter();\n        if (!nextChar || nextChar === '}' || nextChar === ',') {\n          suggestion += '=';\n        }\n        break;\n      }\n\n      case 'context-label-values': {\n        // Always add quotes and remove existing ones instead\n        if (!(typeaheadText.startsWith('=\"') || typeaheadText.startsWith('\"'))) {\n          suggestion = `\"${suggestion}`;\n        }\n        if (getNextCharacter() !== '\"') {\n          suggestion = `${suggestion}\"`;\n        }\n        break;\n      }\n\n      default:\n    }\n\n    this.resetTypeahead();\n\n    // Remove the current, incomplete text and replace it with the selected suggestion\n    let backward = typeaheadPrefix.length;\n    const text = cleanText(typeaheadText);\n    const suffixLength = text.length - typeaheadPrefix.length;\n    const offset = typeaheadText.indexOf(typeaheadPrefix);\n    const midWord = typeaheadPrefix && ((suffixLength > 0 && offset > -1) || suggestion === typeaheadText);\n    const forward = midWord ? suffixLength + offset : 0;\n\n    return (\n      change\n        // TODO this line breaks if cursor was moved left and length is longer than whole prefix\n        .deleteBackward(backward)\n        .deleteForward(forward)\n        .insertText(suggestion)\n        .focus()\n    );\n  }\n\n  onKeyDown = (event, change) => {\n    if (this.menuEl) {\n      const { typeaheadIndex, suggestions } = this.state;\n\n      switch (event.key) {\n        case 'Escape': {\n          if (this.menuEl) {\n            event.preventDefault();\n            this.resetTypeahead();\n            return true;\n          }\n          break;\n        }\n\n        case 'Tab': {\n          // Dont blur input\n          event.preventDefault();\n          if (!suggestions || suggestions.length === 0) {\n            return undefined;\n          }\n\n          // Get the currently selected suggestion\n          const flattenedSuggestions = flattenSuggestions(suggestions);\n          const selected = Math.abs(typeaheadIndex);\n          const selectedIndex = selected % flattenedSuggestions.length || 0;\n          const suggestion = flattenedSuggestions[selectedIndex];\n\n          this.applyTypeahead(change, suggestion);\n          return true;\n        }\n\n        case 'ArrowDown': {\n          // Select next suggestion\n          event.preventDefault();\n          this.setState({ typeaheadIndex: typeaheadIndex + 1 });\n          break;\n        }\n\n        case 'ArrowUp': {\n          // Select previous suggestion\n          event.preventDefault();\n          this.setState({ typeaheadIndex: Math.max(0, typeaheadIndex - 1) });\n          break;\n        }\n\n        default: {\n          // console.log('default key', event.key, event.which, event.charCode, event.locale, data.key);\n          break;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  resetTypeahead = () => {\n    this.setState({\n      suggestions: [],\n      typeaheadIndex: 0,\n      typeaheadPrefix: '',\n      typeaheadContext: null,\n    });\n  };\n\n  async fetchLabelValues(key) {\n    const url = `/api/v1/label/${key}/values`;\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      const pairs = this.state.labelValues[EMPTY_METRIC];\n      const values = {\n        ...pairs,\n        [key]: body.data,\n      };\n      // const labelKeys = {\n      //   ...this.state.labelKeys,\n      //   [EMPTY_METRIC]: keys,\n      // };\n      const labelValues = {\n        ...this.state.labelValues,\n        [EMPTY_METRIC]: values,\n      };\n      this.setState({ labelValues }, this.handleTypeahead);\n    } catch (e) {\n      if (this.props.onRequestError) {\n        this.props.onRequestError(e);\n      } else {\n        console.error(e);\n      }\n    }\n  }\n\n  async fetchMetricLabels(name) {\n    const url = `/api/v1/series?match[]=${name}`;\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      const { keys, values } = processLabels(body.data);\n      const labelKeys = {\n        ...this.state.labelKeys,\n        [name]: keys,\n      };\n      const labelValues = {\n        ...this.state.labelValues,\n        [name]: values,\n      };\n      this.setState({ labelKeys, labelValues }, this.handleTypeahead);\n    } catch (e) {\n      if (this.props.onRequestError) {\n        this.props.onRequestError(e);\n      } else {\n        console.error(e);\n      }\n    }\n  }\n\n  async fetchMetricNames() {\n    const url = '/api/v1/label/__name__/values';\n    try {\n      const res = await this.request(url);\n      const body = await (res.data || res.json());\n      this.setState({ metrics: body.data }, this.onMetricsReceived);\n    } catch (error) {\n      if (this.props.onRequestError) {\n        this.props.onRequestError(error);\n      } else {\n        console.error(error);\n      }\n    }\n  }\n\n  handleBlur = () => {\n    const { onBlur } = this.props;\n    // If we dont wait here, menu clicks wont work because the menu\n    // will be gone.\n    this.resetTimer = setTimeout(this.resetTypeahead, 100);\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  handleFocus = () => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus();\n    }\n  };\n\n  handleClickMenu = item => {\n    // Manually triggering change\n    const change = this.applyTypeahead(this.state.value.change(), item);\n    this.onChange(change);\n  };\n\n  updateMenu = () => {\n    const { suggestions } = this.state;\n    const menu = this.menuEl;\n    const selection = window.getSelection();\n    const node = selection.anchorNode;\n\n    // No menu, nothing to do\n    if (!menu) {\n      return;\n    }\n\n    // No suggestions or blur, remove menu\n    const hasSuggesstions = suggestions && suggestions.length > 0;\n    if (!hasSuggesstions) {\n      menu.removeAttribute('style');\n      return;\n    }\n\n    // Align menu overlay to editor node\n    if (node) {\n      const rect = node.parentElement.getBoundingClientRect();\n      menu.style.opacity = 1;\n      menu.style.top = `${rect.top + window.scrollY + rect.height + 4}px`;\n      menu.style.left = `${rect.left + window.scrollX - 2}px`;\n    }\n  };\n\n  menuRef = el => {\n    this.menuEl = el;\n  };\n\n  renderMenu = () => {\n    const { suggestions } = this.state;\n    const hasSuggesstions = suggestions && suggestions.length > 0;\n    if (!hasSuggesstions) {\n      return null;\n    }\n\n    // Guard selectedIndex to be within the length of the suggestions\n    let selectedIndex = Math.max(this.state.typeaheadIndex, 0);\n    const flattenedSuggestions = flattenSuggestions(suggestions);\n    selectedIndex = selectedIndex % flattenedSuggestions.length || 0;\n    const selectedKeys = flattenedSuggestions.length > 0 ? [flattenedSuggestions[selectedIndex]] : [];\n\n    // Create typeahead in DOM root so we can later position it absolutely\n    return (\n      <Portal>\n        <Typeahead\n          menuRef={this.menuRef}\n          selectedItems={selectedKeys}\n          onClickItem={this.handleClickMenu}\n          groupedItems={suggestions}\n        />\n      </Portal>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"query-field\">\n        {this.renderMenu()}\n        <Editor\n          autoCorrect={false}\n          onBlur={this.handleBlur}\n          onKeyDown={this.onKeyDown}\n          onChange={this.onChange}\n          onFocus={this.handleFocus}\n          placeholder={this.props.placeholder}\n          plugins={this.plugins}\n          spellCheck={false}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default QueryField;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/QueryField.tsx","// Node.closest() polyfill\nif ('Element' in window && !Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n    let el = this;\n    let i;\n    // eslint-disable-next-line\n    do {\n      i = matches.length;\n      // eslint-disable-next-line\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while (i < 0 && (el = el.parentElement));\n    return el;\n  };\n}\n\nexport function getPreviousCousin(node, selector) {\n  let sibling = node.parentElement.previousSibling;\n  let el;\n  while (sibling) {\n    el = sibling.querySelector(selector);\n    if (el) {\n      return el;\n    }\n    sibling = sibling.previousSibling;\n  }\n  return undefined;\n}\n\nexport function getNextCharacter(global = window) {\n  const selection = global.getSelection();\n  if (!selection.anchorNode) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  const text = selection.anchorNode.textContent;\n  const offset = range.startOffset;\n  return text.substr(offset, 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/utils/dom.ts","const BRACES = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nexport default function BracesPlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      switch (event.key) {\n        case '{':\n        case '[': {\n          event.preventDefault();\n          // Insert matching braces\n          change\n            .insertText(`${event.key}${BRACES[event.key]}`)\n            .move(-1)\n            .focus();\n          return true;\n        }\n\n        case '(': {\n          event.preventDefault();\n          const text = value.anchorText.text;\n          const offset = value.anchorOffset;\n          const space = text.indexOf(' ', offset);\n          const length = space > 0 ? space : text.length;\n          const forward = length - offset;\n          // Insert matching braces\n          change\n            .insertText(event.key)\n            .move(forward)\n            .insertText(BRACES[event.key])\n            .move(-1 - forward)\n            .focus();\n          return true;\n        }\n\n        default: {\n          break;\n        }\n      }\n      return undefined;\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/braces.ts","// Clears the rest of the line after the caret\nexport default function ClearPlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      if (event.key === 'k' && event.ctrlKey) {\n        event.preventDefault();\n        const text = value.anchorText.text;\n        const offset = value.anchorOffset;\n        const length = text.length;\n        const forward = length - offset;\n        change.deleteForward(forward);\n        return true;\n      }\n      return undefined;\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/clear.ts","function getIndent(text) {\n  let offset = text.length - text.trimLeft().length;\n  if (offset) {\n    let indent = text[0];\n    while (--offset) {\n      indent += text[0];\n    }\n    return indent;\n  }\n  return '';\n}\n\nexport default function NewlinePlugin() {\n  return {\n    onKeyDown(event, change) {\n      const { value } = change;\n      if (!value.isCollapsed) {\n        return undefined;\n      }\n\n      if (event.key === 'Enter' && event.shiftKey) {\n        event.preventDefault();\n\n        const { startBlock } = value;\n        const currentLineText = startBlock.text;\n        const indent = getIndent(currentLineText);\n\n        return change\n          .splitBlock()\n          .insertText(indent)\n          .focus();\n      }\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/newline.ts","import React from 'react';\nimport Prism from 'prismjs';\n\nimport Promql from './promql';\n\nPrism.languages.promql = Promql;\n\nconst TOKEN_MARK = 'prism-token';\n\nexport function configurePrismMetricsTokens(metrics) {\n  Prism.languages.promql.metric = {\n    alias: 'variable',\n    pattern: new RegExp(`(?:^|\\\\s)(${metrics.join('|')})(?:$|\\\\s)`),\n  };\n}\n\n/**\n * Code-highlighting plugin based on Prism and\n * https://github.com/ianstormtaylor/slate/blob/master/examples/code-highlighting/index.js\n *\n * (Adapted to handle nested grammar definitions.)\n */\n\nexport default function PrismPlugin() {\n  return {\n    /**\n     * Render a Slate mark with appropiate CSS class names\n     *\n     * @param {Object} props\n     * @return {Element}\n     */\n\n    renderMark(props) {\n      const { children, mark } = props;\n      // Only apply spans to marks identified by this plugin\n      if (mark.type !== TOKEN_MARK) {\n        return undefined;\n      }\n      const className = `token ${mark.data.get('types')}`;\n      return <span className={className}>{children}</span>;\n    },\n\n    /**\n     * Decorate code blocks with Prism.js highlighting.\n     *\n     * @param {Node} node\n     * @return {Array}\n     */\n\n    decorateNode(node) {\n      if (node.type !== 'paragraph') {\n        return [];\n      }\n\n      const texts = node.getTexts().toArray();\n      const tstring = texts.map(t => t.text).join('\\n');\n      const grammar = Prism.languages.promql;\n      const tokens = Prism.tokenize(tstring, grammar);\n      const decorations = [];\n      let startText = texts.shift();\n      let endText = startText;\n      let startOffset = 0;\n      let endOffset = 0;\n      let start = 0;\n\n      function processToken(token, acc?) {\n        // Accumulate token types down the tree\n        const types = `${acc || ''} ${token.type || ''} ${token.alias || ''}`;\n\n        // Add mark for token node\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          startText = endText;\n          startOffset = endOffset;\n\n          const content = typeof token === 'string' ? token : token.content;\n          const newlines = content.split('\\n').length - 1;\n          const length = content.length - newlines;\n          const end = start + length;\n\n          let available = startText.text.length - startOffset;\n          let remaining = length;\n\n          endOffset = startOffset + remaining;\n\n          while (available < remaining) {\n            endText = texts.shift();\n            remaining = length - available;\n            available = endText.text.length;\n            endOffset = remaining;\n          }\n\n          // Inject marks from up the tree (acc) as well\n          if (typeof token !== 'string' || acc) {\n            const range = {\n              anchorKey: startText.key,\n              anchorOffset: startOffset,\n              focusKey: endText.key,\n              focusOffset: endOffset,\n              marks: [{ type: TOKEN_MARK, data: { types } }],\n            };\n\n            decorations.push(range);\n          }\n\n          start = end;\n        } else if (token.content && token.content.length) {\n          // Tokens can be nested\n          for (const subToken of token.content) {\n            processToken(subToken, types);\n          }\n        }\n      }\n\n      // Process top-level tokens\n      for (const token of tokens) {\n        processToken(token);\n      }\n\n      return decorations;\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/prism/index.tsx","export const OPERATORS = ['by', 'group_left', 'group_right', 'ignoring', 'on', 'offset', 'without'];\n\nconst AGGREGATION_OPERATORS = [\n  'sum',\n  'min',\n  'max',\n  'avg',\n  'stddev',\n  'stdvar',\n  'count',\n  'count_values',\n  'bottomk',\n  'topk',\n  'quantile',\n];\n\nexport const FUNCTIONS = [\n  ...AGGREGATION_OPERATORS,\n  'abs',\n  'absent',\n  'ceil',\n  'changes',\n  'clamp_max',\n  'clamp_min',\n  'count_scalar',\n  'day_of_month',\n  'day_of_week',\n  'days_in_month',\n  'delta',\n  'deriv',\n  'drop_common_labels',\n  'exp',\n  'floor',\n  'histogram_quantile',\n  'holt_winters',\n  'hour',\n  'idelta',\n  'increase',\n  'irate',\n  'label_replace',\n  'ln',\n  'log2',\n  'log10',\n  'minute',\n  'month',\n  'predict_linear',\n  'rate',\n  'resets',\n  'round',\n  'scalar',\n  'sort',\n  'sort_desc',\n  'sqrt',\n  'time',\n  'vector',\n  'year',\n  'avg_over_time',\n  'min_over_time',\n  'max_over_time',\n  'sum_over_time',\n  'count_over_time',\n  'quantile_over_time',\n  'stddev_over_time',\n  'stdvar_over_time',\n];\n\nconst tokenizer = {\n  comment: {\n    pattern: /(^|[^\\n])#.*/,\n    lookbehind: true,\n  },\n  'context-aggregation': {\n    pattern: /((by|without)\\s*)\\([^)]*\\)/, // by ()\n    lookbehind: true,\n    inside: {\n      'label-key': {\n        pattern: /[^,\\s][^,]*[^,\\s]*/,\n        alias: 'attr-name',\n      },\n    },\n  },\n  'context-labels': {\n    pattern: /\\{[^}]*(?=})/,\n    inside: {\n      'label-key': {\n        pattern: /[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n        alias: 'attr-name',\n      },\n      'label-value': {\n        pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'attr-value',\n      },\n    },\n  },\n  function: new RegExp(`\\\\b(?:${FUNCTIONS.join('|')})(?=\\\\s*\\\\()`, 'i'),\n  'context-range': [\n    {\n      pattern: /\\[[^\\]]*(?=])/, // [1m]\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n    {\n      pattern: /(offset\\s+)\\w+/, // offset 1m\n      lookbehind: true,\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n  ],\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  operator: new RegExp(`/[-+*/=%^~]|&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\\\b(?:${OPERATORS.join('|')})\\\\b`, 'i'),\n  punctuation: /[{};()`,.]/,\n};\n\nexport default tokenizer;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/prism/promql.ts","export default function RunnerPlugin({ handler }) {\n  return {\n    onKeyDown(event) {\n      // Handle enter\n      if (handler && event.key === 'Enter' && !event.shiftKey) {\n        // Submit on Enter\n        event.preventDefault();\n        handler(event);\n        return true;\n      }\n      return undefined;\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/slate-plugins/runner.ts","// Based on underscore.js debounce()\nexport default function debounce(func, wait) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = function() {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/utils/debounce.ts","export const RATE_RANGES = ['1m', '5m', '10m', '30m', '1h'];\n\nexport function processLabels(labels) {\n  const values = {};\n  labels.forEach(l => {\n    const { __name__, ...rest } = l;\n    Object.keys(rest).forEach(key => {\n      if (!values[key]) {\n        values[key] = [];\n      }\n      if (values[key].indexOf(rest[key]) === -1) {\n        values[key].push(rest[key]);\n      }\n    });\n  });\n  return { values, keys: Object.keys(values) };\n}\n\n// Strip syntax chars\nexport const cleanText = s => s.replace(/[{}[\\]=\"(),!~+\\-*/^%]/g, '').trim();\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/utils/prometheus.ts","import React from 'react';\n\nfunction scrollIntoView(el) {\n  if (!el || !el.offsetParent) {\n    return;\n  }\n  const container = el.offsetParent;\n  if (el.offsetTop > container.scrollTop + container.offsetHeight || el.offsetTop < container.scrollTop) {\n    container.scrollTop = el.offsetTop - container.offsetTop;\n  }\n}\n\nclass TypeaheadItem extends React.PureComponent<any, any> {\n  el: any;\n  componentDidUpdate(prevProps) {\n    if (this.props.isSelected && !prevProps.isSelected) {\n      scrollIntoView(this.el);\n    }\n  }\n\n  getRef = el => {\n    this.el = el;\n  };\n\n  render() {\n    const { isSelected, label, onClickItem } = this.props;\n    const className = isSelected ? 'typeahead-item typeahead-item__selected' : 'typeahead-item';\n    const onClick = () => onClickItem(label);\n    return (\n      <li ref={this.getRef} className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nclass TypeaheadGroup extends React.PureComponent<any, any> {\n  render() {\n    const { items, label, selected, onClickItem } = this.props;\n    return (\n      <li className=\"typeahead-group\">\n        <div className=\"typeahead-group__title\">{label}</div>\n        <ul className=\"typeahead-group__list\">\n          {items.map(item => (\n            <TypeaheadItem key={item} onClickItem={onClickItem} isSelected={selected.indexOf(item) > -1} label={item} />\n          ))}\n        </ul>\n      </li>\n    );\n  }\n}\n\nclass Typeahead extends React.PureComponent<any, any> {\n  render() {\n    const { groupedItems, menuRef, selectedItems, onClickItem } = this.props;\n    return (\n      <ul className=\"typeahead\" ref={menuRef}>\n        {groupedItems.map(g => (\n          <TypeaheadGroup key={g.label} onClickItem={onClickItem} selected={selectedItems} {...g} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Typeahead;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Typeahead.tsx","import $ from 'jquery';\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.time';\nimport * as dateMath from 'app/core/utils/datemath';\nimport TimeSeries from 'app/core/time_series2';\n\nimport Legend from './Legend';\n\n// Copied from graph.ts\nfunction time_format(ticks, min, max) {\n  if (min && max && ticks) {\n    var range = max - min;\n    var secPerTick = range / ticks / 1000;\n    var oneDay = 86400000;\n    var oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  return '%H:%M';\n}\n\nconst FLOT_OPTIONS = {\n  legend: {\n    show: false,\n  },\n  series: {\n    lines: {\n      linewidth: 1,\n      zero: false,\n    },\n    shadowSize: 0,\n  },\n  grid: {\n    minBorderMargin: 0,\n    markings: [],\n    backgroundColor: null,\n    borderWidth: 0,\n    // hoverable: true,\n    clickable: true,\n    color: '#a1a1a1',\n    margin: { left: 0, right: 0 },\n    labelMarginX: 0,\n  },\n  // selection: {\n  //   mode: 'x',\n  //   color: '#666',\n  // },\n  // crosshair: {\n  //   mode: 'x',\n  // },\n};\n\nclass Graph extends Component<any, any> {\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data !== this.props.data ||\n      prevProps.options !== this.props.options ||\n      prevProps.split !== this.props.split ||\n      prevProps.height !== this.props.height\n    ) {\n      this.draw();\n    }\n  }\n\n  draw() {\n    const { data, options: userOptions } = this.props;\n    if (!data) {\n      return;\n    }\n    const series = data.map((ts: TimeSeries) => ({\n      color: ts.color,\n      label: ts.label,\n      data: ts.getFlotPairs('null'),\n    }));\n\n    const $el = $(`#${this.props.id}`);\n    const ticks = $el.width() / 100;\n    let { from, to } = userOptions.range;\n    if (!moment.isMoment(from)) {\n      from = dateMath.parse(from, false);\n    }\n    if (!moment.isMoment(to)) {\n      to = dateMath.parse(to, true);\n    }\n    const min = from.valueOf();\n    const max = to.valueOf();\n    const dynamicOptions = {\n      xaxis: {\n        mode: 'time',\n        min: min,\n        max: max,\n        label: 'Datetime',\n        ticks: ticks,\n        timeformat: time_format(ticks, min, max),\n      },\n    };\n    const options = {\n      ...FLOT_OPTIONS,\n      ...dynamicOptions,\n      ...userOptions,\n    };\n    $.plot($el, series, options);\n  }\n\n  render() {\n    const { data, height } = this.props;\n    return (\n      <div className=\"panel-container\">\n        <div id={this.props.id} className=\"explore-graph\" style={{ height }} />\n        <Legend data={data} />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Graph.tsx","import React, { PureComponent } from 'react';\n\nconst LegendItem = ({ series }) => (\n  <div className=\"graph-legend-series\">\n    <div className=\"graph-legend-icon\">\n      <i className=\"fa fa-minus pointer\" style={{ color: series.color }} />\n    </div>\n    <a className=\"graph-legend-alias pointer\">{series.alias}</a>\n  </div>\n);\n\nexport default class Legend extends PureComponent<any, any> {\n  render() {\n    const { className = '', data } = this.props;\n    const items = data || [];\n    return (\n      <div className={`${className} graph-legend ps`}>\n        {items.map(series => <LegendItem key={series.id} series={series} />)}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Legend.tsx","import React, { PureComponent } from 'react';\n// import TableModel from 'app/core/table_model';\n\nconst EMPTY_TABLE = {\n  columns: [],\n  rows: [],\n};\n\nexport default class Table extends PureComponent<any, any> {\n  render() {\n    const { className = '', data } = this.props;\n    const tableModel = data || EMPTY_TABLE;\n    return (\n      <table className={`${className} filter-table`}>\n        <thead>\n          <tr>{tableModel.columns.map(col => <th key={col.text}>{col.text}</th>)}</tr>\n        </thead>\n        <tbody>\n          {tableModel.rows.map((row, i) => <tr key={i}>{row.map((content, j) => <td key={j}>{content}</td>)}</tr>)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/Table.tsx","import React, { PureComponent } from 'react';\nimport moment from 'moment';\n\nimport * as dateMath from 'app/core/utils/datemath';\nimport * as rangeUtil from 'app/core/utils/rangeutil';\n\nconst DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport const DEFAULT_RANGE = {\n  from: 'now-6h',\n  to: 'now',\n};\n\nexport function parseTime(value, isUtc = false, asString = false) {\n  if (value.indexOf('now') !== -1) {\n    return value;\n  }\n  if (!isNaN(value)) {\n    const epoch = parseInt(value);\n    const m = isUtc ? moment.utc(epoch) : moment(epoch);\n    return asString ? m.format(DATE_FORMAT) : m;\n  }\n  return undefined;\n}\n\nexport default class TimePicker extends PureComponent<any, any> {\n  dropdownEl: any;\n  constructor(props) {\n    super(props);\n\n    const fromRaw = props.range ? props.range.from : DEFAULT_RANGE.from;\n    const toRaw = props.range ? props.range.to : DEFAULT_RANGE.to;\n    const range = {\n      from: parseTime(fromRaw),\n      to: parseTime(toRaw),\n    };\n    this.state = {\n      fromRaw: parseTime(fromRaw, props.isUtc, true),\n      isOpen: props.isOpen,\n      isUtc: props.isUtc,\n      rangeString: rangeUtil.describeTimeRange(range),\n      refreshInterval: '',\n      toRaw: parseTime(toRaw, props.isUtc, true),\n    };\n  }\n\n  move(direction) {\n    const { onChangeTime } = this.props;\n    const { fromRaw, toRaw } = this.state;\n    const range = {\n      from: dateMath.parse(fromRaw, false),\n      to: dateMath.parse(toRaw, true),\n    };\n\n    const timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\n    let to, from;\n    if (direction === -1) {\n      to = range.to.valueOf() - timespan;\n      from = range.from.valueOf() - timespan;\n    } else if (direction === 1) {\n      to = range.to.valueOf() + timespan;\n      from = range.from.valueOf() + timespan;\n      if (to > Date.now() && range.to < Date.now()) {\n        to = Date.now();\n        from = range.from.valueOf();\n      }\n    } else {\n      to = range.to.valueOf();\n      from = range.from.valueOf();\n    }\n\n    const rangeString = rangeUtil.describeTimeRange(range);\n    // No need to convert to UTC again\n    to = moment(to);\n    from = moment(from);\n\n    this.setState(\n      {\n        rangeString,\n        fromRaw: from.format(DATE_FORMAT),\n        toRaw: to.format(DATE_FORMAT),\n      },\n      () => {\n        onChangeTime({ to, from });\n      }\n    );\n  }\n\n  handleChangeFrom = e => {\n    this.setState({\n      fromRaw: e.target.value,\n    });\n  };\n\n  handleChangeTo = e => {\n    this.setState({\n      toRaw: e.target.value,\n    });\n  };\n\n  handleClickApply = () => {\n    const { onChangeTime } = this.props;\n    const { toRaw, fromRaw } = this.state;\n    const range = {\n      from: dateMath.parse(fromRaw, false),\n      to: dateMath.parse(toRaw, true),\n    };\n    const rangeString = rangeUtil.describeTimeRange(range);\n    this.setState(\n      {\n        isOpen: false,\n        rangeString,\n      },\n      () => {\n        if (onChangeTime) {\n          onChangeTime(range);\n        }\n      }\n    );\n  };\n\n  handleClickLeft = () => this.move(-1);\n  handleClickPicker = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n  handleClickRight = () => this.move(1);\n  handleClickRefresh = () => {};\n  handleClickRelativeOption = range => {\n    const { onChangeTime } = this.props;\n    const rangeString = rangeUtil.describeTimeRange(range);\n    this.setState(\n      {\n        toRaw: range.to,\n        fromRaw: range.from,\n        isOpen: false,\n        rangeString,\n      },\n      () => {\n        if (onChangeTime) {\n          onChangeTime(range);\n        }\n      }\n    );\n  };\n\n  getTimeOptions() {\n    return rangeUtil.getRelativeTimesList({}, this.state.rangeString);\n  }\n\n  dropdownRef = el => {\n    this.dropdownEl = el;\n  };\n\n  renderDropdown() {\n    const { fromRaw, isOpen, toRaw } = this.state;\n    if (!isOpen) {\n      return null;\n    }\n    const timeOptions = this.getTimeOptions();\n    return (\n      <div ref={this.dropdownRef} className=\"gf-timepicker-dropdown\">\n        <div className=\"gf-timepicker-absolute-section\">\n          <h3 className=\"section-heading\">Custom range</h3>\n\n          <label className=\"small\">From:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <input\n                type=\"text\"\n                className=\"gf-form-input input-large timepicker-from\"\n                value={fromRaw}\n                onChange={this.handleChangeFrom}\n              />\n            </div>\n          </div>\n\n          <label className=\"small\">To:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <input\n                type=\"text\"\n                className=\"gf-form-input input-large timepicker-to\"\n                value={toRaw}\n                onChange={this.handleChangeTo}\n              />\n            </div>\n          </div>\n\n          {/* <label className=\"small\">Refreshing every:</label>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-28\">\n              <select className=\"gf-form-input input-medium\" ng-options=\"f.value as f.text for f in ctrl.refresh.options\"></select>\n            </div>\n          </div> */}\n          <div className=\"gf-form\">\n            <button className=\"btn gf-form-btn btn-secondary\" onClick={this.handleClickApply}>\n              Apply\n            </button>\n          </div>\n        </div>\n\n        <div className=\"gf-timepicker-relative-section\">\n          <h3 className=\"section-heading\">Quick ranges</h3>\n          {Object.keys(timeOptions).map(section => {\n            const group = timeOptions[section];\n            return (\n              <ul key={section}>\n                {group.map(option => (\n                  <li className={option.active ? 'active' : ''} key={option.display}>\n                    <a onClick={() => this.handleClickRelativeOption(option)}>{option.display}</a>\n                  </li>\n                ))}\n              </ul>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { isUtc, rangeString, refreshInterval } = this.state;\n    return (\n      <div className=\"timepicker\">\n        <div className=\"navbar-buttons\">\n          <button className=\"btn navbar-button navbar-button--tight timepicker-left\" onClick={this.handleClickLeft}>\n            <i className=\"fa fa-chevron-left\" />\n          </button>\n          <button className=\"btn navbar-button gf-timepicker-nav-btn\" onClick={this.handleClickPicker}>\n            <i className=\"fa fa-clock-o\" />\n            <span className=\"timepicker-rangestring\">{rangeString}</span>\n            {isUtc ? <span className=\"gf-timepicker-utc\">UTC</span> : null}\n            {refreshInterval ? <span className=\"text-warning\">&nbsp; Refresh every {refreshInterval}</span> : null}\n          </button>\n          <button className=\"btn navbar-button navbar-button--tight timepicker-right\" onClick={this.handleClickRight}>\n            <i className=\"fa fa-chevron-right\" />\n          </button>\n        </div>\n        {this.renderDropdown()}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/TimePicker.tsx","export function buildQueryOptions({ format, interval, instant, range, queries }) {\n  return {\n    interval,\n    range,\n    targets: queries.map(expr => ({\n      expr,\n      format,\n      instant,\n    })),\n  };\n}\n\nexport function generateQueryKey(index = 0) {\n  return `Q-${Date.now()}-${Math.random()}-${index}`;\n}\n\nexport function ensureQueries(queries?) {\n  if (queries && typeof queries === 'object' && queries.length > 0 && typeof queries[0] === 'string') {\n    return queries.map((query, i) => ({ key: generateQueryKey(i), query }));\n  }\n  return [{ key: generateQueryKey(), query: '' }];\n}\n\nexport function hasQuery(queries) {\n  return queries.some(q => q.query);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./public/app/containers/Explore/utils/query.ts"],"sourceRoot":""}