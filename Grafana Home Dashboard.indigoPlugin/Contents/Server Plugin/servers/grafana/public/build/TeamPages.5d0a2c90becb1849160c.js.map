{"version":3,"sources":["webpack:///./public/app/features/teams/state/selectors.ts","webpack:///./public/app/features/teams/TeamSettings.tsx","webpack:///./public/app/features/teams/TeamGroupSync.tsx","webpack:///./public/app/core/selectors/location.ts","webpack:///./public/app/core/components/WithFeatureToggle.tsx","webpack:///./public/app/features/teams/TeamMemberRow.tsx","webpack:///./public/app/features/teams/TeamMembers.tsx","webpack:///./public/app/features/teams/TeamPages.tsx"],"names":["__webpack_require__","d","__webpack_exports__","getSearchQuery","getSearchMemberQuery","getTeamGroups","getTeamsCount","getTeam","getTeams","getTeamMembers","isSignedInUserTeamAdmin","isPermissionTeamAdmin","app_types__WEBPACK_IMPORTED_MODULE_0__","state","searchQuery","searchMemberQuery","groups","teams","length","currentTeamId","team","id","parseInt","regex","RegExp","filter","test","name","members","member","login","email","config","signedInUser","editorsCanAdmin","userInMembers","find","m","userId","permission","Member","isAdmin","isGrafanaAdmin","orgRole","Admin","userIsTeamAdmin","TeamSettings","_super","props","_this","call","this","onChangeName","event","setState","target","value","onChangeEmail","onUpdate","_a","preventDefault","updateTeam","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onSubmit","_grafana_ui__WEBPACK_IMPORTED_MODULE_3__","type","required","onChange","tooltip","placeholder","app_core_components_SharedPreferences_SharedPreferences__WEBPACK_IMPORTED_MODULE_4__","resourceUri","Component","mapDispatchToProps","_state_actions__WEBPACK_IMPORTED_MODULE_5__","react_redux__WEBPACK_IMPORTED_MODULE_2__","teamId","app_core_selectors_location__WEBPACK_IMPORTED_MODULE_6__","location","_state_selectors__WEBPACK_IMPORTED_MODULE_7__","headerTooltip","TeamGroupSync","onToggleAdding","isAdding","onNewGroupIdChanged","newGroupId","onAddGroup","addTeamGroup","onRemoveGroup","group","removeTeamGroup","groupId","componentDidMount","fetchTeamGroups","loadTeamGroups","sent","isNewGroupValid","renderGroup","key","style","width","onClick","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","placement","content","app_core_components_Animations_SlideDown__WEBPACK_IMPORTED_MODULE_3__","in","disabled","app_core_components_EmptyListCTA_EmptyListCTA__WEBPACK_IMPORTED_MODULE_7__","buttonIcon","title","buttonTitle","proTip","proTipLinkTitle","proTipLink","proTipTarget","map","react__WEBPACK_IMPORTED_MODULE_1__","_state_selectors__WEBPACK_IMPORTED_MODULE_6__","getRouteParamsId","getRouteParamsPage","routeParams","page","WithFeatureToggle","featureToggle","children","react_default","Fragment","TeamMemberRow_TeamMemberRow","TeamMemberRow","onPermissionChange","item","updatedTeamMember","tslib_es6","updateTeamMember","renderLabels","bind","renderPermissions","onRemoveMember","removeTeamMember","signedInUserIsTeamAdmin","types","dp","src","isSearchable","options","label","labels","TagBadge","removeIcon","count","syncEnabled","avatarUrl","onConfirm","react","actions","teams_TeamMemberRow","es","TeamMembers_TeamMembers","TeamMembers","onSearchQueryChange","setSearchMemberQuery","onUserSelected","user","newTeamMember","onAddUserToTeam","addTeamMember","isTeamAdmin","selectors","FilterInput","labelClassName","inputClassName","SlideDown","UserPicker","onSelected","TeamMembers_mapDispatchToProps","context_srv","PageTypes","TeamPages","textsAreEqual","text1","text2","toLocaleLowerCase","hideTabsFromNonTeamAdmin","navModel","main","navItem","text","Members","hideFromTabs","isLoading","isSyncEnabled","app_core_config__WEBPACK_IMPORTED_MODULE_5__","buildInfo","isEnterprise","fetchTeam","loadTeam","_b","loadTeamMembers","getCurrentPage","pages","currentPage","pageName","lodash__WEBPACK_IMPORTED_MODULE_3___default","includes","renderPage","_TeamMembers__WEBPACK_IMPORTED_MODULE_7__","Settings","_TeamSettings__WEBPACK_IMPORTED_MODULE_8__","GroupSync","_TeamGroupSync__WEBPACK_IMPORTED_MODULE_9__","_state_selectors__WEBPACK_IMPORTED_MODULE_11__","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_6__","Contents","keys","_state_actions__WEBPACK_IMPORTED_MODULE_10__","react_hot_loader__WEBPACK_IMPORTED_MODULE_4__","module","_core_selectors_location__WEBPACK_IMPORTED_MODULE_14__","teamLoadingNav","_state_navModel__WEBPACK_IMPORTED_MODULE_12__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_13__","navIndex","app_core_services_context_srv__WEBPACK_IMPORTED_MODULE_15__"],"mappings":"8FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAA,IAAAC,EAAAZ,EAAA,QAGaG,EAAiB,SAACU,GAAsB,OAAAA,EAAMC,aAC9CV,EAAuB,SAACS,GAAqB,OAAAA,EAAME,mBACnDV,EAAgB,SAACQ,GAAqB,OAAAA,EAAMG,QAC5CV,EAAgB,SAACO,GAAsB,OAAAA,EAAMI,MAAMC,QAEnDX,EAAU,SAACM,EAAkBM,GACxC,OAAIN,EAAMO,KAAKC,KAAOC,SAASH,EAAe,IACrCN,EAAMO,KAGR,MAGIZ,EAAW,SAACK,GACvB,IAAMU,EAAQC,OAAOX,EAAMC,YAAa,KAExC,OAAOD,EAAMI,MAAMQ,OAAO,SAAAL,GACxB,OAAOG,EAAMG,KAAKN,EAAKO,SAIdlB,EAAiB,SAACI,GAC7B,IAAMU,EAAQC,OAAOX,EAAME,kBAAmB,KAE9C,OAAOF,EAAMe,QAAQH,OAAO,SAAAI,GAC1B,OAAON,EAAMG,KAAKG,EAAOC,QAAUP,EAAMG,KAAKG,EAAOE,UAU5CrB,EAA0B,SAACsB,GAC9B,IAAAJ,EAAAI,EAAAJ,QAASK,EAAAD,EAAAC,aAAcC,EAAAF,EAAAE,gBACzBC,EAAgBP,EAAQQ,KAAK,SAAAC,GAAK,OAAAA,EAAEC,SAAWL,EAAaZ,KAC5DkB,EAAaJ,EAAgBA,EAAcI,WAAa3B,EAAA,oBAAoB4B,OAElF,OAAO7B,EAAsB,CAAE4B,WAAUA,EAAEN,aAAYA,EAAEC,gBAAeA,KAS7DvB,EAAwB,SAACqB,GAC5B,IAAAO,EAAAP,EAAAO,WAAYN,EAAAD,EAAAC,aAAcC,EAAAF,EAAAE,gBAC5BO,EAAUR,EAAaS,gBAAkBT,EAAaU,UAAY/B,EAAA,QAAQgC,MAC1EC,EAAkBN,IAAe3B,EAAA,oBAAoBgC,MAG3D,OAFgCH,GAAWI,IAERX,mJCtCrCY,EAAA,SAAAC,GACE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAQdF,EAAAG,aAAe,SAACC,GACdJ,EAAKK,SAAS,CAAE3B,KAAM0B,EAAME,OAAOC,SAGrCP,EAAAQ,cAAgB,SAACJ,GACfJ,EAAKK,SAAS,CAAEvB,MAAOsB,EAAME,OAAOC,SAGtCP,EAAAS,SAAW,SAACL,GACJ,IAAAM,EAAAV,EAAApC,MAAEc,EAAAgC,EAAAhC,KAAMI,EAAA4B,EAAA5B,MACdsB,EAAMO,iBACNX,EAAKD,MAAMa,WAAWlC,EAAMI,IAjB5BkB,EAAKpC,MAAQ,CACXc,KAAMqB,EAAM5B,KAAKO,KACjBI,MAAOiB,EAAM5B,KAAKW,SA4DxB,OAlEkC+B,OAAAC,EAAA,UAAAD,CAAAhB,EAAAC,GAwBhCD,EAAAkB,UAAAC,OAAA,WACU,IAAA7C,EAAA+B,KAAAH,MAAA5B,KACFuC,EAAAR,KAAAtC,MAAEc,EAAAgC,EAAAhC,KAAMI,EAAA4B,EAAA5B,MAEd,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAkB,iBAChCH,EAAAC,EAAAC,cAAA,QAAMzC,KAAK,kBAAkB0C,UAAU,gBAAgBC,SAAUnB,KAAKO,UACpEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACG,EAAA,UAAS,aACVL,EAAAC,EAAAC,cAACG,EAAA,MAAK,CACJC,KAAK,OACLC,UAAQ,EACRjB,MAAO7B,EACP0C,UAAU,6BACVK,SAAUvB,KAAKC,gBAInBc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACG,EAAA,UAAS,CAACI,QAAQ,gGAA8F,SAGjHT,EAAAC,EAAAC,cAACG,EAAA,MAAK,CACJC,KAAK,QACLH,UAAU,6BACVb,MAAOzB,EACP6C,YAAY,iBACZF,SAAUvB,KAAKM,iBAInBS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,mBAAiB,YAKrDH,EAAAC,EAAAC,cAACS,EAAA,EAAiB,CAACC,YAAa,SAAS1D,EAAKC,OAItDyB,EAlEA,CAAkCoB,EAAAC,EAAMY,WA4ExC,IAAMC,EAAqB,CACzBnB,WAAUoB,EAAA,GAGG/E,EAAA,EAAA4D,OAAAoB,EAAA,QAAApB,CAZf,SAAyBjD,GACvB,IAAMsE,EAASrB,OAAAsB,EAAA,EAAAtB,CAAiBjD,EAAMwE,UAEtC,MAAO,CACLjE,KAAM0C,OAAAwB,EAAA,EAAAxB,CAAQjD,EAAMO,KAAM+D,KAU5BH,EAFa,CAGblC,mJChFIyC,EAAgB,qDAEtBC,EAAA,SAAAzC,GACE,SAAAyC,EAAYxC,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAYdF,EAAAwC,eAAiB,WACfxC,EAAKK,SAAS,CAAEoC,UAAWzC,EAAKpC,MAAM6E,YAGxCzC,EAAA0C,oBAAsB,SAACtC,GACrBJ,EAAKK,SAAS,CAAEsC,WAAYvC,EAAME,OAAOC,SAG3CP,EAAA4C,WAAa,SAACxC,GACZA,EAAMO,iBACNX,EAAKD,MAAM8C,aAAa7C,EAAKpC,MAAM+E,YACnC3C,EAAKK,SAAS,CAAEoC,UAAU,EAAOE,WAAY,MAG/C3C,EAAA8C,cAAgB,SAACC,GACf/C,EAAKD,MAAMiD,gBAAgBD,EAAME,UA1BjCjD,EAAKpC,MAAQ,CAAE6E,UAAU,EAAOE,WAAY,MA0HhD,OA7HmC9B,OAAAC,EAAA,UAAAD,CAAA0B,EAAAzC,GAMjCyC,EAAAxB,UAAAmC,kBAAA,WACEhD,KAAKiD,mBAGDZ,EAAAxB,UAAAoC,gBAAN,yIACE,SAAMjD,KAAKH,MAAMqD,gCAAjB1C,EAAA2C,iBAqBFd,EAAAxB,UAAAuC,gBAAA,WACE,OAAOpD,KAAKtC,MAAM+E,WAAW1E,OAAS,GAGxCsE,EAAAxB,UAAAwC,YAAA,SAAYR,GAAZ,IAAA/C,EAAAE,KACE,OACEe,EAAAC,EAAAC,cAAA,MAAIqC,IAAKT,EAAME,SACbhC,EAAAC,EAAAC,cAAA,UAAK4B,EAAME,SACXhC,EAAAC,EAAAC,cAAA,MAAIsC,MAAO,CAAEC,MAAO,OAClBzC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BuC,QAAS,WAAM,OAAA3D,EAAK8C,cAAcC,KACxE9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAOvBmB,EAAAxB,UAAAC,OAAA,eAAAhB,EAAAE,KACQQ,EAAAR,KAAAtC,MAAE6E,EAAA/B,EAAA+B,SAAUE,EAAAjC,EAAAiC,WACZ5E,EAASmC,KAAKH,MAAMhC,OAE1B,OACEkD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAkB,uBAChCH,EAAAC,EAAAC,cAACyC,EAAA,QAAO,CAACC,UAAU,OAAOC,QAASxB,GACjCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACdrD,EAAOE,OAAS,GACfgD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BuC,QAASzD,KAAKsC,gBAC3DvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAKnBH,EAAAC,EAAAC,cAAC4C,EAAA,EAAS,CAACC,GAAIvB,GACbxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sCAAsCuC,QAASzD,KAAKsC,gBACpEvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEfH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBC,SAAUnB,KAAK0C,YAC9C3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyC,EAAA,MAAK,CACJrC,KAAK,OACLH,UAAU,yBACVb,MAAOoC,EACPlB,SAAUvB,KAAKwC,oBACff,YAAY,wCAIhBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BG,KAAK,SAAS0C,UAAW/D,KAAKoD,mBAAiB,iBAQpF,IAAlBvF,EAAOE,SAAiBwE,GACvBxB,EAAAC,EAAAC,cAAC+C,EAAA,EAAY,CACXP,QAASzD,KAAKsC,eACd2B,WAAW,mBACXC,MAAM,4CACNC,YAAY,YACZC,OAAQhC,EACRiC,gBAAgB,aAChBC,WAAW,8CACXC,aAAa,WAIhB1G,EAAOE,OAAS,GACfgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gDACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,MAAIsC,MAAO,CAAEC,MAAO,UAGxBzC,EAAAC,EAAAC,cAAA,aAAQpD,EAAO2G,IAAI,SAAA3B,GAAS,OAAA/C,EAAKuD,YAAYR,UAO3DR,EA7HA,CAAmCoC,EAAA,eAqInC,IAAM5C,EAAqB,CACzBqB,eAAcpB,EAAA,EACda,aAAYb,EAAA,EACZgB,gBAAehB,EAAA,GAGF/E,EAAA,EAAA4D,OAAAoB,EAAA,QAAApB,CAZf,SAAyBjD,GACvB,MAAO,CACLG,OAAQ8C,OAAA+D,EAAA,EAAA/D,CAAcjD,EAAMO,QAY9B4D,EAFa,CAGbQ,wCCrKFxF,EAAAC,EAAAC,EAAA,sBAAA4H,IAAA9H,EAAAC,EAAAC,EAAA,sBAAA6H,IAAO,IAAMD,EAAmB,SAACjH,GAAyB,OAAAA,EAAMmH,YAAY3G,IAC/D0G,EAAqB,SAAClH,GAAyB,OAAAA,EAAMmH,YAAYC,kKCGjEC,EAA8C,SAACvE,OAAEwE,EAAAxE,EAAAwE,cAAeC,EAAAzE,EAAAyE,SAC3E,OAAsB,IAAlBD,EACKE,EAAAlE,EAAAC,cAAAiE,EAAAlE,EAAAmE,SAAA,KAAGF,GAGL,sDCQTG,EAAA,SAAAxF,GACE,SAAAyF,EAAYxF,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YASdF,EAAAwF,mBAAqB,SAACC,EAA4C7G,GAChE,IAAMU,EAAamG,EAAKlF,MAClBmF,EAAoB7E,OAAA8E,EAAA,SAAA9E,QAAA8E,EAAA,SAAA9E,CAAA,GAAKjC,GAAM,CAAEU,WAAUA,IAEjDU,EAAKD,MAAM6F,iBAAiBF,IAZ5B1F,EAAK6F,aAAe7F,EAAK6F,aAAaC,KAAK9F,GAC3CA,EAAK+F,kBAAoB/F,EAAK+F,kBAAkBD,KAAK9F,KAqEzD,OAzEmCa,OAAA8E,EAAA,UAAA9E,CAAA0E,EAAAzF,GAOjCyF,EAAAxE,UAAAiF,eAAA,SAAepH,GACbsB,KAAKH,MAAMkG,iBAAiBrH,EAAOS,SAUrCkG,EAAAxE,UAAAgF,kBAAA,SAAkBnH,GAAlB,IAAAoB,EAAAE,KACQQ,EAAAR,KAAAH,MAAEd,EAAAyB,EAAAzB,gBAAiBiH,EAAAxF,EAAAwF,wBACnB3F,EAAQ4F,EAAA,sBAAsBhH,KAAK,SAAAiH,GAAM,OAAAA,EAAG7F,QAAU3B,EAAOU,aAEnE,OACE8F,EAAAlE,EAAAC,cAAC8D,EAAiB,CAACC,cAAejG,GAChCmG,EAAAlE,EAAAC,cAAA,MAAIC,UAAU,4BACZgE,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,WACZ8E,GACCd,EAAAlE,EAAAC,cAACkF,EAAA,OAAM,CACLC,cAAc,EACdC,QAASJ,EAAA,sBACT1E,SAAU,SAAAgE,GAAQ,OAAAzF,EAAKwF,mBAAmBC,EAAM7G,IAChDwC,UAAU,0CACVb,MAAOA,KAGT2F,GAA2Bd,EAAAlE,EAAAC,cAAA,YAAOZ,EAAMiG,WAOpDjB,EAAAxE,UAAA8E,aAAA,SAAaY,GACX,OAAKA,EAKHrB,EAAAlE,EAAAC,cAAA,UACGsF,EAAO/B,IAAI,SAAA8B,GAAS,OACnBpB,EAAAlE,EAAAC,cAACuF,EAAA,EAAQ,CAAClD,IAAKgD,EAAOA,MAAOA,EAAOG,YAAY,EAAOC,MAAO,EAAGjD,QAAS,kBANvEyB,EAAAlE,EAAAC,cAAA,YAYXoE,EAAAxE,UAAAC,OAAA,eAAAhB,EAAAE,KACQQ,EAAAR,KAAAH,MAAEnB,EAAA8B,EAAA9B,OAAQiI,EAAAnG,EAAAmG,YAAaX,EAAAxF,EAAAwF,wBAC7B,OACEd,EAAAlE,EAAAC,cAAA,MAAIqC,IAAK5E,EAAOS,QACd+F,EAAAlE,EAAAC,cAAA,MAAIC,UAAU,uBACZgE,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,uBAAuBiF,IAAKzH,EAAOkI,aAEpD1B,EAAAlE,EAAAC,cAAA,UAAKvC,EAAOC,OACZuG,EAAAlE,EAAAC,cAAA,UAAKvC,EAAOE,OACXoB,KAAK6F,kBAAkBnH,GACvBiI,GAAe3G,KAAK2F,aAAajH,EAAO6H,QACzCrB,EAAAlE,EAAAC,cAAA,MAAIC,UAAU,cACZgE,EAAAlE,EAAAC,cAACkF,EAAA,aAAY,CAACU,UAAW,WAAM,OAAA/G,EAAKgG,eAAepH,IAASqF,UAAWiC,OAKjFX,EAzEA,CAAmCyB,EAAA,eA+EnC,IAAMjF,EAAqB,CACzBkE,iBAAgBgB,EAAA,EAChBrB,iBAAgBqB,EAAA,GAGHC,EAAArG,OAAAsG,EAAA,QAAAtG,CATf,SAAyBjD,GACvB,MAAO,IAUPmE,EAFa,CAGbuD,GC7EF8B,EAAA,SAAAtH,GACE,SAAAuH,EAAYtH,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAIdF,EAAAsH,oBAAsB,SAAC/G,GACrBP,EAAKD,MAAMwH,qBAAqBhH,IAGlCP,EAAAwC,eAAiB,WACfxC,EAAKK,SAAS,CAAEoC,UAAWzC,EAAKpC,MAAM6E,YAGxCzC,EAAAwH,eAAiB,SAACC,GAChBzH,EAAKK,SAAS,CAAEqH,cAAeD,KAGjCzH,EAAA2H,gBAAkB,kBAAA9G,OAAA8E,EAAA,UAAA9E,CAAAb,OAAA,yEAChBE,KAAKH,MAAM6H,cAAc1H,KAAKtC,MAAM8J,cAActJ,IAClD8B,KAAKG,SAAS,CAAEqH,cAAe,gBAjB/B1H,EAAKpC,MAAQ,CAAE6E,UAAU,EAAOiF,cAAe,QA+GnD,OAlHiC7G,OAAA8E,EAAA,UAAA9E,CAAAwG,EAAAvH,GAuB/BuH,EAAAtG,UAAA8E,aAAA,SAAaY,GACX,OAAKA,EAKHrB,EAAAlE,EAAAC,cAAA,UACGsF,EAAO/B,IAAI,SAAA8B,GAAS,OACnBpB,EAAAlE,EAAAC,cAACuF,EAAA,EAAQ,CAAClD,IAAKgD,EAAOA,MAAOA,EAAOG,YAAY,EAAOC,MAAO,EAAGjD,QAAS,kBANvEyB,EAAAlE,EAAAC,cAAA,YAYXkG,EAAAtG,UAAAC,OAAA,WACU,IAAAyB,EAAAvC,KAAAtC,MAAA6E,SACF/B,EAAAR,KAAAH,MAAEjC,EAAA4C,EAAA5C,kBAAmBa,EAAA+B,EAAA/B,QAASkI,EAAAnG,EAAAmG,YAAa5H,EAAAyB,EAAAzB,gBAAiBD,EAAA0B,EAAA1B,aAC5D6I,EAAchH,OAAAiH,EAAA,EAAAjH,CAAwB,CAAElC,QAAOA,EAAEM,gBAAeA,EAAED,aAAYA,IAEpF,OACEoG,EAAAlE,EAAAC,cAAA,WACEiE,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,mBACbgE,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,yBACbgE,EAAAlE,EAAAC,cAAC4G,EAAA,EAAW,CACVC,eAAe,wCACfC,eAAe,gBACftG,YAAY,iBACZpB,MAAOzC,EACP2D,SAAUvB,KAAKoH,uBAInBlC,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,4BAEfgE,EAAAlE,EAAAC,cAAA,UACEC,UAAU,6BACVuC,QAASzD,KAAKsC,eACdyB,SAAUxB,IAAaoF,GAAW,eAMtCzC,EAAAlE,EAAAC,cAAC+G,EAAA,EAAS,CAAClE,GAAIvB,GACb2C,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,YACbgE,EAAAlE,EAAAC,cAAA,UAAQC,UAAU,sCAAsCuC,QAASzD,KAAKsC,gBACpE4C,EAAAlE,EAAAC,cAAA,KAAGC,UAAU,iBAEfgE,EAAAlE,EAAAC,cAAA,6BACAiE,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,kBACbgE,EAAAlE,EAAAC,cAACgH,EAAA,EAAU,CAACC,WAAYlI,KAAKsH,eAAgBpG,UAAU,iBACtDlB,KAAKtC,MAAM8J,eACVtC,EAAAlE,EAAAC,cAAA,UAAQC,UAAU,8BAA8BG,KAAK,SAASoC,QAASzD,KAAKyH,iBAAe,kBAQnGvC,EAAAlE,EAAAC,cAAA,OAAKC,UAAU,oBACbgE,EAAAlE,EAAAC,cAAA,SAAOC,UAAU,gDACfgE,EAAAlE,EAAAC,cAAA,aACEiE,EAAAlE,EAAAC,cAAA,UACEiE,EAAAlE,EAAAC,cAAA,WACAiE,EAAAlE,EAAAC,cAAA,kBACAiE,EAAAlE,EAAAC,cAAA,mBACAiE,EAAAlE,EAAAC,cAAC8D,EAAiB,CAACC,cAAejG,GAChCmG,EAAAlE,EAAAC,cAAA,yBAED0F,GAAezB,EAAAlE,EAAAC,cAAA,WAChBiE,EAAAlE,EAAAC,cAAA,MAAIsC,MAAO,CAAEC,MAAO,UAGxB0B,EAAAlE,EAAAC,cAAA,aACGxC,GACCA,EAAQ+F,IAAI,SAAA9F,GAAU,OACpBwG,EAAAlE,EAAAC,cAAC+F,EAAa,CACZ1D,IAAK5E,EAAOS,OACZT,OAAQA,EACRiI,YAAaA,EACb5H,gBAAiBA,EACjBiH,wBAAyB2B,WAS7CR,EAlHA,CAAiCL,EAAA,eA4HjC,IAAMqB,EAAqB,CACzBT,cAAaX,EAAA,EACbM,qBAAoBN,EAAA,GAGPhK,EAAA,EAAA4D,OAAAsG,EAAA,QAAAtG,CAbf,SAAyBjD,GACvB,MAAO,CACLE,kBAAmB+C,OAAAiH,EAAA,EAAAjH,CAAqBjD,EAAMO,MAC9Cc,gBAAiBF,EAAA,EAAOE,gBACxBD,aAAcsJ,EAAA,EAAWb,OAW3BY,EAFa,CAGbjB,uGC9HGmB,qNAAL,SAAKA,GACHA,EAAA,kBACAA,EAAA,oBACAA,EAAA,sBAHF,CAAKA,MAAS,KAMd,IAAAC,EAAA,SAAA1I,GACE,SAAA0I,EAAYzI,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YA2BdF,EAAAyI,cAAgB,SAACC,EAAeC,GAC9B,OAAKD,IAAUC,MAIVD,IAAUC,IAIRD,EAAME,sBAAwBD,EAAMC,qBAG7C5I,EAAA6I,yBAA2B,SAACC,EAAoBrL,GAS9C,OARKA,GAA2BqL,EAASC,MAAQD,EAASC,KAAK5D,UAC7D2D,EAASC,KAAK5D,SACX3G,OAAO,SAAAwK,GAAW,OAAChJ,EAAKyI,cAAcO,EAAQC,KAAMV,EAAUW,WAC9DxE,IAAI,SAAAsE,GACHA,EAAQG,cAAe,IAItBL,GA9CP9I,EAAKpC,MAAQ,CACXwL,WAAW,EACXC,cAAeC,EAAA,EAAOC,UAAUC,gBA6EtC,OAnF+B3I,OAAAC,EAAA,UAAAD,CAAA2H,EAAA1I,GAUvB0I,EAAAzH,UAAAmC,kBAAN,yIACE,SAAMhD,KAAKuJ,2BAAX/I,EAAA2C,iBAGImF,EAAAzH,UAAA0I,UAAN,qJAGe,OAFP/I,EAAuBR,KAAKH,MAA1B2J,EAAQhJ,EAAAgJ,SAAExH,EAAMxB,EAAAwB,OACxBhC,KAAKG,SAAS,CAAE+I,WAAW,IACd,GAAMM,EAASxH,WAC5B,OADM/D,EAAOwL,EAAAtG,OACb,GAAMnD,KAAKH,MAAM6J,0BAEjB,OAFAD,EAAAtG,OACAnD,KAAKG,SAAS,CAAE+I,WAAW,IAC3B,GAAOjL,SAGTqK,EAAAzH,UAAA8I,eAAA,WACE,IAAMC,EAAQ,CAAC,UAAW,WAAY,aAChCC,EAAc7J,KAAKH,MAAMiK,SAC/B,OAAOC,EAAA/I,EAAEgJ,SAASJ,EAAOC,GAAeA,EAAcD,EAAM,IA2B9DtB,EAAAzH,UAAAoJ,WAAA,SAAW1M,GACD,IAAA4L,EAAAnJ,KAAAtC,MAAAyL,cACA1K,EAAAuB,KAAAH,MAAApB,QAGR,OAFoBuB,KAAK2J,kBAGvB,KAAKtB,EAAUW,QACb,OAAOjI,EAAAC,EAAAC,cAACiJ,EAAA,EAAW,CAACvD,YAAawC,EAAe1K,QAASA,IAE3D,KAAK4J,EAAU8B,SACb,OAAO5M,GAA2BwD,EAAAC,EAAAC,cAACmJ,EAAA,EAAY,MACjD,KAAK/B,EAAUgC,UACb,OAAO9M,GAA2B4L,GAAiBpI,EAAAC,EAAAC,cAACqJ,EAAA,EAAa,MAGrE,OAAO,MAGThC,EAAAzH,UAAAC,OAAA,WACQ,IAAAN,EAAAR,KAAAH,MAAE5B,EAAAuC,EAAAvC,KAAM2K,EAAApI,EAAAoI,SAAUnK,EAAA+B,EAAA/B,QAASM,EAAAyB,EAAAzB,gBAAiBD,EAAA0B,EAAA1B,aAC5C6I,EAAchH,OAAA4J,EAAA,EAAA5J,CAAwB,CAAElC,QAAOA,EAAEM,gBAAeA,EAAED,aAAYA,IAEpF,OACEiC,EAAAC,EAAAC,cAACuJ,EAAA,EAAI,CAAC5B,SAAU5I,KAAK2I,yBAAyBC,EAAUjB,IACtD5G,EAAAC,EAAAC,cAACuJ,EAAA,EAAKC,SAAQ,CAACvB,UAAWlJ,KAAKtC,MAAMwL,WAClCjL,GAAqC,IAA7B0C,OAAO+J,KAAKzM,GAAMF,QAAgBiC,KAAKiK,WAAWtC,MAKrEW,EAnFA,CAA+B7D,EAAA,eAwG/B,IAAM5C,EAAqB,CACzB2H,SAAQmB,EAAA,EACRjB,gBAAeiB,EAAA,GAGF5N,EAAA,QAAA4D,OAAAiK,EAAA,IAAAjK,CAAIkK,EAAJ,CACblK,OAAAoB,EAAA,QAAApB,CAzBF,SAAyBjD,GACvB,IAAMsE,EAASrB,OAAAmK,EAAA,EAAAnK,CAAiBjD,EAAMwE,UAChC4H,EAAWnJ,OAAAmK,EAAA,EAAAnK,CAAmBjD,EAAMwE,WAAa,UACjD6I,EAAiBpK,OAAAqK,EAAA,EAAArK,CAAkBmJ,GAKzC,MAAO,CACLlB,SALejI,OAAAsK,EAAA,EAAAtK,CAAYjD,EAAMwN,SAAU,QAAQpB,EAAQ,IAAI9H,EAAU+I,GAMzE/I,OAAQA,EACR8H,SAAUA,EACV7L,KAPW0C,OAAA4J,EAAA,EAAA5J,CAAQjD,EAAMO,KAAM+D,GAQ/BvD,QAPckC,OAAA4J,EAAA,EAAA5J,CAAejD,EAAMO,MAQnCc,gBAAiBqK,EAAA,EAAOrK,gBACxBD,aAAcqM,EAAA,EAAW5D,OAYzB1F,EAFFlB,CAGE2H","file":"TeamPages.5d0a2c90becb1849160c.js","sourcesContent":["import { Team, TeamsState, TeamState, TeamMember, OrgRole, TeamPermissionLevel } from 'app/types';\nimport { User } from 'app/core/services/context_srv';\n\nexport const getSearchQuery = (state: TeamsState) => state.searchQuery;\nexport const getSearchMemberQuery = (state: TeamState) => state.searchMemberQuery;\nexport const getTeamGroups = (state: TeamState) => state.groups;\nexport const getTeamsCount = (state: TeamsState) => state.teams.length;\n\nexport const getTeam = (state: TeamState, currentTeamId: any): Team | null => {\n  if (state.team.id === parseInt(currentTeamId, 10)) {\n    return state.team;\n  }\n\n  return null;\n};\n\nexport const getTeams = (state: TeamsState) => {\n  const regex = RegExp(state.searchQuery, 'i');\n\n  return state.teams.filter(team => {\n    return regex.test(team.name);\n  });\n};\n\nexport const getTeamMembers = (state: TeamState) => {\n  const regex = RegExp(state.searchMemberQuery, 'i');\n\n  return state.members.filter(member => {\n    return regex.test(member.login) || regex.test(member.email);\n  });\n};\n\nexport interface Config {\n  members: TeamMember[];\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isSignedInUserTeamAdmin = (config: Config): boolean => {\n  const { members, signedInUser, editorsCanAdmin } = config;\n  const userInMembers = members.find(m => m.userId === signedInUser.id);\n  const permission = userInMembers ? userInMembers.permission : TeamPermissionLevel.Member;\n\n  return isPermissionTeamAdmin({ permission, signedInUser, editorsCanAdmin });\n};\n\nexport interface PermissionConfig {\n  permission: TeamPermissionLevel;\n  editorsCanAdmin: boolean;\n  signedInUser: User;\n}\n\nexport const isPermissionTeamAdmin = (config: PermissionConfig): boolean => {\n  const { permission, signedInUser, editorsCanAdmin } = config;\n  const isAdmin = signedInUser.isGrafanaAdmin || signedInUser.orgRole === OrgRole.Admin;\n  const userIsTeamAdmin = permission === TeamPermissionLevel.Admin;\n  const isSignedInUserTeamAdmin = isAdmin || userIsTeamAdmin;\n\n  return isSignedInUserTeamAdmin || !editorsCanAdmin;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FormLabel, Input } from '@grafana/ui';\n\nimport { SharedPreferences } from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { updateTeam } from './state/actions';\nimport { getRouteParamsId } from 'app/core/selectors/location';\nimport { getTeam } from './state/selectors';\nimport { Team } from 'app/types';\n\nexport interface Props {\n  team: Team;\n  updateTeam: typeof updateTeam;\n}\n\ninterface State {\n  name: string;\n  email: string;\n}\n\nexport class TeamSettings extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      name: props.team.name,\n      email: props.team.email,\n    };\n  }\n\n  onChangeName = (event: any) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onChangeEmail = (event: any) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onUpdate = (event: any) => {\n    const { name, email } = this.state;\n    event.preventDefault();\n    this.props.updateTeam(name, email);\n  };\n\n  render() {\n    const { team } = this.props;\n    const { name, email } = this.state;\n\n    return (\n      <div>\n        <h3 className=\"page-sub-heading\">Team Settings</h3>\n        <form name=\"teamDetailsForm\" className=\"gf-form-group\" onSubmit={this.onUpdate}>\n          <div className=\"gf-form max-width-30\">\n            <FormLabel>Name</FormLabel>\n            <Input\n              type=\"text\"\n              required\n              value={name}\n              className=\"gf-form-input max-width-22\"\n              onChange={this.onChangeName}\n            />\n          </div>\n\n          <div className=\"gf-form max-width-30\">\n            <FormLabel tooltip=\"This is optional and is primarily used to set the team profile avatar (via gravatar service)\">\n              Email\n            </FormLabel>\n            <Input\n              type=\"email\"\n              className=\"gf-form-input max-width-22\"\n              value={email}\n              placeholder=\"team@email.com\"\n              onChange={this.onChangeEmail}\n            />\n          </div>\n\n          <div className=\"gf-form-button-row\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Update\n            </button>\n          </div>\n        </form>\n        <SharedPreferences resourceUri={`teams/${team.id}`} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const teamId = getRouteParamsId(state.location);\n\n  return {\n    team: getTeam(state.team, teamId),\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTeam,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamSettings);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { Input, Tooltip } from '@grafana/ui';\n\nimport { TeamGroup } from '../../types';\nimport { addTeamGroup, loadTeamGroups, removeTeamGroup } from './state/actions';\nimport { getTeamGroups } from './state/selectors';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\n\nexport interface Props {\n  groups: TeamGroup[];\n  loadTeamGroups: typeof loadTeamGroups;\n  addTeamGroup: typeof addTeamGroup;\n  removeTeamGroup: typeof removeTeamGroup;\n}\n\ninterface State {\n  isAdding: boolean;\n  newGroupId?: string;\n}\n\nconst headerTooltip = `Sync LDAP or OAuth groups with your Grafana teams.`;\n\nexport class TeamGroupSync extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { isAdding: false, newGroupId: '' };\n  }\n\n  componentDidMount() {\n    this.fetchTeamGroups();\n  }\n\n  async fetchTeamGroups() {\n    await this.props.loadTeamGroups();\n  }\n\n  onToggleAdding = () => {\n    this.setState({ isAdding: !this.state.isAdding });\n  };\n\n  onNewGroupIdChanged = (event: any) => {\n    this.setState({ newGroupId: event.target.value });\n  };\n\n  onAddGroup = (event: any) => {\n    event.preventDefault();\n    this.props.addTeamGroup(this.state.newGroupId);\n    this.setState({ isAdding: false, newGroupId: '' });\n  };\n\n  onRemoveGroup = (group: TeamGroup) => {\n    this.props.removeTeamGroup(group.groupId);\n  };\n\n  isNewGroupValid() {\n    return this.state.newGroupId.length > 1;\n  }\n\n  renderGroup(group: TeamGroup) {\n    return (\n      <tr key={group.groupId}>\n        <td>{group.groupId}</td>\n        <td style={{ width: '1%' }}>\n          <a className=\"btn btn-danger btn-small\" onClick={() => this.onRemoveGroup(group)}>\n            <i className=\"fa fa-remove\" />\n          </a>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { isAdding, newGroupId } = this.state;\n    const groups = this.props.groups;\n\n    return (\n      <div>\n        <div className=\"page-action-bar\">\n          <h3 className=\"page-sub-heading\">External group sync</h3>\n          <Tooltip placement=\"auto\" content={headerTooltip}>\n            <div className=\"page-sub-heading-icon\">\n              <i className=\"gicon gicon-question gicon--has-hover\" />\n            </div>\n          </Tooltip>\n          <div className=\"page-action-bar__spacer\" />\n          {groups.length > 0 && (\n            <button className=\"btn btn-primary pull-right\" onClick={this.onToggleAdding}>\n              <i className=\"fa fa-plus\" /> Add group\n            </button>\n          )}\n        </div>\n\n        <SlideDown in={isAdding}>\n          <div className=\"cta-form\">\n            <button className=\"cta-form__close btn btn-transparent\" onClick={this.onToggleAdding}>\n              <i className=\"fa fa-close\" />\n            </button>\n            <h5>Add External Group</h5>\n            <form className=\"gf-form-inline\" onSubmit={this.onAddGroup}>\n              <div className=\"gf-form\">\n                <Input\n                  type=\"text\"\n                  className=\"gf-form-input width-30\"\n                  value={newGroupId}\n                  onChange={this.onNewGroupIdChanged}\n                  placeholder=\"cn=ops,ou=groups,dc=grafana,dc=org\"\n                />\n              </div>\n\n              <div className=\"gf-form\">\n                <button className=\"btn btn-primary gf-form-btn\" type=\"submit\" disabled={!this.isNewGroupValid()}>\n                  Add group\n                </button>\n              </div>\n            </form>\n          </div>\n        </SlideDown>\n\n        {groups.length === 0 && !isAdding && (\n          <EmptyListCTA\n            onClick={this.onToggleAdding}\n            buttonIcon=\"gicon gicon-team\"\n            title=\"There are no external groups to sync with\"\n            buttonTitle=\"Add Group\"\n            proTip={headerTooltip}\n            proTipLinkTitle=\"Learn more\"\n            proTipLink=\"http://docs.grafana.org/auth/enhanced_ldap/\"\n            proTipTarget=\"_blank\"\n          />\n        )}\n\n        {groups.length > 0 && (\n          <div className=\"admin-list-table\">\n            <table className=\"filter-table filter-table--hover form-inline\">\n              <thead>\n                <tr>\n                  <th>External Group ID</th>\n                  <th style={{ width: '1%' }} />\n                </tr>\n              </thead>\n              <tbody>{groups.map(group => this.renderGroup(group))}</tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    groups: getTeamGroups(state.team),\n  };\n}\n\nconst mapDispatchToProps = {\n  loadTeamGroups,\n  addTeamGroup,\n  removeTeamGroup,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamGroupSync);\n","import { LocationState } from 'app/types';\n\nexport const getRouteParamsId = (state: LocationState) => state.routeParams.id;\nexport const getRouteParamsPage = (state: LocationState) => state.routeParams.page;\n","import React, { FunctionComponent } from 'react';\n\nexport interface Props {\n  featureToggle: boolean;\n}\n\nexport const WithFeatureToggle: FunctionComponent<Props> = ({ featureToggle, children }) => {\n  if (featureToggle === true) {\n    return <>{children}</>;\n  }\n\n  return null;\n};\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { DeleteButton, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\nimport { TeamMember, teamsPermissionLevels, TeamPermissionLevel } from 'app/types';\nimport { WithFeatureToggle } from 'app/core/components/WithFeatureToggle';\nimport { updateTeamMember, removeTeamMember } from './state/actions';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\n\nexport interface Props {\n  member: TeamMember;\n  syncEnabled: boolean;\n  editorsCanAdmin: boolean;\n  signedInUserIsTeamAdmin: boolean;\n  removeTeamMember?: typeof removeTeamMember;\n  updateTeamMember?: typeof updateTeamMember;\n}\n\nexport class TeamMemberRow extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.renderPermissions = this.renderPermissions.bind(this);\n  }\n\n  onRemoveMember(member: TeamMember) {\n    this.props.removeTeamMember(member.userId);\n  }\n\n  onPermissionChange = (item: SelectableValue<TeamPermissionLevel>, member: TeamMember) => {\n    const permission = item.value;\n    const updatedTeamMember = { ...member, permission };\n\n    this.props.updateTeamMember(updatedTeamMember);\n  };\n\n  renderPermissions(member: TeamMember) {\n    const { editorsCanAdmin, signedInUserIsTeamAdmin } = this.props;\n    const value = teamsPermissionLevels.find(dp => dp.value === member.permission);\n\n    return (\n      <WithFeatureToggle featureToggle={editorsCanAdmin}>\n        <td className=\"width-5 team-permissions\">\n          <div className=\"gf-form\">\n            {signedInUserIsTeamAdmin && (\n              <Select\n                isSearchable={false}\n                options={teamsPermissionLevels}\n                onChange={item => this.onPermissionChange(item, member)}\n                className=\"gf-form-select-box__control--menu-right\"\n                value={value}\n              />\n            )}\n            {!signedInUserIsTeamAdmin && <span>{value.label}</span>}\n          </div>\n        </td>\n      </WithFeatureToggle>\n    );\n  }\n\n  renderLabels(labels: string[]) {\n    if (!labels) {\n      return <td />;\n    }\n\n    return (\n      <td>\n        {labels.map(label => (\n          <TagBadge key={label} label={label} removeIcon={false} count={0} onClick={() => {}} />\n        ))}\n      </td>\n    );\n  }\n\n  render() {\n    const { member, syncEnabled, signedInUserIsTeamAdmin } = this.props;\n    return (\n      <tr key={member.userId}>\n        <td className=\"width-4 text-center\">\n          <img className=\"filter-table__avatar\" src={member.avatarUrl} />\n        </td>\n        <td>{member.login}</td>\n        <td>{member.email}</td>\n        {this.renderPermissions(member)}\n        {syncEnabled && this.renderLabels(member.labels)}\n        <td className=\"text-right\">\n          <DeleteButton onConfirm={() => this.onRemoveMember(member)} disabled={!signedInUserIsTeamAdmin} />\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {};\n}\n\nconst mapDispatchToProps = {\n  removeTeamMember,\n  updateTeamMember,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamMemberRow);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { UserPicker } from 'app/core/components/Select/UserPicker';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { TeamMember, User } from 'app/types';\nimport { addTeamMember, setSearchMemberQuery } from './state/actions';\nimport { getSearchMemberQuery, isSignedInUserTeamAdmin } from './state/selectors';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { WithFeatureToggle } from 'app/core/components/WithFeatureToggle';\nimport { config } from 'app/core/config';\nimport { contextSrv, User as SignedInUser } from 'app/core/services/context_srv';\nimport TeamMemberRow from './TeamMemberRow';\n\nexport interface Props {\n  members: TeamMember[];\n  searchMemberQuery: string;\n  addTeamMember: typeof addTeamMember;\n  setSearchMemberQuery: typeof setSearchMemberQuery;\n  syncEnabled: boolean;\n  editorsCanAdmin?: boolean;\n  signedInUser?: SignedInUser;\n}\n\nexport interface State {\n  isAdding: boolean;\n  newTeamMember?: User;\n}\n\nexport class TeamMembers extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { isAdding: false, newTeamMember: null };\n  }\n\n  onSearchQueryChange = (value: string) => {\n    this.props.setSearchMemberQuery(value);\n  };\n\n  onToggleAdding = () => {\n    this.setState({ isAdding: !this.state.isAdding });\n  };\n\n  onUserSelected = (user: User) => {\n    this.setState({ newTeamMember: user });\n  };\n\n  onAddUserToTeam = async () => {\n    this.props.addTeamMember(this.state.newTeamMember.id);\n    this.setState({ newTeamMember: null });\n  };\n\n  renderLabels(labels: string[]) {\n    if (!labels) {\n      return <td />;\n    }\n\n    return (\n      <td>\n        {labels.map(label => (\n          <TagBadge key={label} label={label} removeIcon={false} count={0} onClick={() => {}} />\n        ))}\n      </td>\n    );\n  }\n\n  render() {\n    const { isAdding } = this.state;\n    const { searchMemberQuery, members, syncEnabled, editorsCanAdmin, signedInUser } = this.props;\n    const isTeamAdmin = isSignedInUserTeamAdmin({ members, editorsCanAdmin, signedInUser });\n\n    return (\n      <div>\n        <div className=\"page-action-bar\">\n          <div className=\"gf-form gf-form--grow\">\n            <FilterInput\n              labelClassName=\"gf-form--has-input-icon gf-form--grow\"\n              inputClassName=\"gf-form-input\"\n              placeholder=\"Search members\"\n              value={searchMemberQuery}\n              onChange={this.onSearchQueryChange}\n            />\n          </div>\n\n          <div className=\"page-action-bar__spacer\" />\n\n          <button\n            className=\"btn btn-primary pull-right\"\n            onClick={this.onToggleAdding}\n            disabled={isAdding || !isTeamAdmin}\n          >\n            Add member\n          </button>\n        </div>\n\n        <SlideDown in={isAdding}>\n          <div className=\"cta-form\">\n            <button className=\"cta-form__close btn btn-transparent\" onClick={this.onToggleAdding}>\n              <i className=\"fa fa-close\" />\n            </button>\n            <h5>Add team member</h5>\n            <div className=\"gf-form-inline\">\n              <UserPicker onSelected={this.onUserSelected} className=\"min-width-30\" />\n              {this.state.newTeamMember && (\n                <button className=\"btn btn-primary gf-form-btn\" type=\"submit\" onClick={this.onAddUserToTeam}>\n                  Add to team\n                </button>\n              )}\n            </div>\n          </div>\n        </SlideDown>\n\n        <div className=\"admin-list-table\">\n          <table className=\"filter-table filter-table--hover form-inline\">\n            <thead>\n              <tr>\n                <th />\n                <th>Name</th>\n                <th>Email</th>\n                <WithFeatureToggle featureToggle={editorsCanAdmin}>\n                  <th>Permission</th>\n                </WithFeatureToggle>\n                {syncEnabled && <th />}\n                <th style={{ width: '1%' }} />\n              </tr>\n            </thead>\n            <tbody>\n              {members &&\n                members.map(member => (\n                  <TeamMemberRow\n                    key={member.userId}\n                    member={member}\n                    syncEnabled={syncEnabled}\n                    editorsCanAdmin={editorsCanAdmin}\n                    signedInUserIsTeamAdmin={isTeamAdmin}\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    searchMemberQuery: getSearchMemberQuery(state.team),\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  addTeamMember,\n  setSearchMemberQuery,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamMembers);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { hot } from 'react-hot-loader';\nimport config from 'app/core/config';\nimport Page from 'app/core/components/Page/Page';\nimport TeamMembers from './TeamMembers';\nimport TeamSettings from './TeamSettings';\nimport TeamGroupSync from './TeamGroupSync';\nimport { Team, TeamMember } from 'app/types';\nimport { loadTeam, loadTeamMembers } from './state/actions';\nimport { getTeam, getTeamMembers, isSignedInUserTeamAdmin } from './state/selectors';\nimport { getTeamLoadingNav } from './state/navModel';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getRouteParamsId, getRouteParamsPage } from '../../core/selectors/location';\nimport { contextSrv, User } from 'app/core/services/context_srv';\nimport { NavModel } from '@grafana/data';\n\nexport interface Props {\n  team: Team;\n  loadTeam: typeof loadTeam;\n  loadTeamMembers: typeof loadTeamMembers;\n  teamId: number;\n  pageName: string;\n  navModel: NavModel;\n  members?: TeamMember[];\n  editorsCanAdmin?: boolean;\n  signedInUser?: User;\n}\n\ninterface State {\n  isSyncEnabled: boolean;\n  isLoading: boolean;\n}\n\nenum PageTypes {\n  Members = 'members',\n  Settings = 'settings',\n  GroupSync = 'groupsync',\n}\n\nexport class TeamPages extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      isSyncEnabled: config.buildInfo.isEnterprise,\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchTeam();\n  }\n\n  async fetchTeam() {\n    const { loadTeam, teamId } = this.props;\n    this.setState({ isLoading: true });\n    const team = await loadTeam(teamId);\n    await this.props.loadTeamMembers();\n    this.setState({ isLoading: false });\n    return team;\n  }\n\n  getCurrentPage() {\n    const pages = ['members', 'settings', 'groupsync'];\n    const currentPage = this.props.pageName;\n    return _.includes(pages, currentPage) ? currentPage : pages[0];\n  }\n\n  textsAreEqual = (text1: string, text2: string) => {\n    if (!text1 && !text2) {\n      return true;\n    }\n\n    if (!text1 || !text2) {\n      return false;\n    }\n\n    return text1.toLocaleLowerCase() === text2.toLocaleLowerCase();\n  };\n\n  hideTabsFromNonTeamAdmin = (navModel: NavModel, isSignedInUserTeamAdmin: boolean) => {\n    if (!isSignedInUserTeamAdmin && navModel.main && navModel.main.children) {\n      navModel.main.children\n        .filter(navItem => !this.textsAreEqual(navItem.text, PageTypes.Members))\n        .map(navItem => {\n          navItem.hideFromTabs = true;\n        });\n    }\n\n    return navModel;\n  };\n\n  renderPage(isSignedInUserTeamAdmin: boolean) {\n    const { isSyncEnabled } = this.state;\n    const { members } = this.props;\n    const currentPage = this.getCurrentPage();\n\n    switch (currentPage) {\n      case PageTypes.Members:\n        return <TeamMembers syncEnabled={isSyncEnabled} members={members} />;\n\n      case PageTypes.Settings:\n        return isSignedInUserTeamAdmin && <TeamSettings />;\n      case PageTypes.GroupSync:\n        return isSignedInUserTeamAdmin && isSyncEnabled && <TeamGroupSync />;\n    }\n\n    return null;\n  }\n\n  render() {\n    const { team, navModel, members, editorsCanAdmin, signedInUser } = this.props;\n    const isTeamAdmin = isSignedInUserTeamAdmin({ members, editorsCanAdmin, signedInUser });\n\n    return (\n      <Page navModel={this.hideTabsFromNonTeamAdmin(navModel, isTeamAdmin)}>\n        <Page.Contents isLoading={this.state.isLoading}>\n          {team && Object.keys(team).length !== 0 && this.renderPage(isTeamAdmin)}\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const teamId = getRouteParamsId(state.location);\n  const pageName = getRouteParamsPage(state.location) || 'members';\n  const teamLoadingNav = getTeamLoadingNav(pageName as string);\n  const navModel = getNavModel(state.navIndex, `team-${pageName}-${teamId}`, teamLoadingNav);\n  const team = getTeam(state.team, teamId);\n  const members = getTeamMembers(state.team);\n\n  return {\n    navModel,\n    teamId: teamId,\n    pageName: pageName,\n    team,\n    members,\n    editorsCanAdmin: config.editorsCanAdmin, // this makes the feature toggle mockable/controllable from tests,\n    signedInUser: contextSrv.user, // this makes the feature toggle mockable/controllable from tests,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadTeam,\n  loadTeamMembers,\n};\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TeamPages)\n);\n"],"sourceRoot":""}